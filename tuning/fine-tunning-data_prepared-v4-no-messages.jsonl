{"prompt":"Show me the fields awsRegion, type, eventType, userName, type, vpcSet, arn, arn, filterSet, requestID, managementEvent, accountId, filterSet, readOnly, eventCategory, eventVersion, eventCategory, eventCategory, sourceIPAddress, recipientAccountId, with a limit of 31 ->","completion":" fields @timestamp, awsRegion, userIdentity.sessionContext.sessionIssuer.type, eventType, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.type, requestParameters.vpcSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, requestID, managementEvent, userIdentity.accountId, requestParameters.filterSet, readOnly, eventCategory, eventVersion, eventCategory, eventCategory, sourceIPAddress, recipientAccountId, | sort @timestamp desc | limit 31 ###"}
{"prompt":"Show me the fields eventTime, with a limit of 94 ->","completion":" fields @timestamp, eventTime, | sort @timestamp desc | limit 94 ###"}
{"prompt":"Show me the fields eventCategory, eventName, managementEvent, readOnly, invokedBy, principalId, creationDate, type, type, accountId, invokedBy, sourceIPAddress, sourceIPAddress, arn, responseElements, readOnly, type, creationDate, managementEvent, eventSource, webIdFederationData, vpcSet, managementEvent, invokedBy, invokedBy, type, principalId, managementEvent, with a limit of 96 ->","completion":" fields @timestamp, eventCategory, eventName, managementEvent, readOnly, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.type, userIdentity.accountId, userIdentity.invokedBy, sourceIPAddress, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.arn, responseElements, readOnly, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.creationDate, managementEvent, eventSource, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, managementEvent, userIdentity.invokedBy, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.type, userIdentity.principalId, managementEvent, | sort @timestamp desc | limit 96 ###"}
{"prompt":"Show me the fields vpcSet, userAgent, recipientAccountId, awsRegion, managementEvent, principalId, userAgent, type, arn, principalId, recipientAccountId, managementEvent, webIdFederationData, accountId, eventSource, awsRegion, with a limit of 10 ->","completion":" fields @timestamp, requestParameters.vpcSet, userAgent, recipientAccountId, awsRegion, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, userAgent, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, recipientAccountId, managementEvent, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.accountId, eventSource, awsRegion, | sort @timestamp desc | limit 10 ###"}
{"prompt":"Show me the fields requestID, accountId, managementEvent, responseElements, eventVersion, arn, webIdFederationData, readOnly, userAgent, arn, eventType, type, invokedBy, sourceIPAddress, mfaAuthenticated, type, arn, eventVersion, accountId, invokedBy, vpcSet, eventID, principalId, principalId, accountId, readOnly, awsRegion, filterSet, eventType, readOnly, with a limit of 47 ->","completion":" fields @timestamp, requestID, userIdentity.sessionContext.sessionIssuer.accountId, managementEvent, responseElements, eventVersion, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, readOnly, userAgent, userIdentity.arn, eventType, userIdentity.sessionContext.sessionIssuer.type, userIdentity.invokedBy, sourceIPAddress, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.type, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, requestParameters.vpcSet, eventID, userIdentity.principalId, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.accountId, readOnly, awsRegion, requestParameters.filterSet, eventType, readOnly, | sort @timestamp desc | limit 47 ###"}
{"prompt":"Show me the fields arn, filterSet, managementEvent, principalId, accountId, eventSource, recipientAccountId, invokedBy, arn, eventCategory, requestID, principalId, webIdFederationData, eventVersion, userAgent, type, arn, eventTime, with a limit of 65 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.accountId, eventSource, recipientAccountId, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, requestID, userIdentity.principalId, userIdentity.sessionContext.webIdFederationData, eventVersion, userAgent, userIdentity.type, userIdentity.arn, eventTime, | sort @timestamp desc | limit 65 ###"}
{"prompt":"Show me the fields readOnly, invokedBy, accountId, principalId, eventName, vpcSet, eventType, creationDate, mfaAuthenticated, accountId, webIdFederationData, eventID, userAgent, accountId, accountId, arn, eventCategory, awsRegion, type, eventTime, eventCategory, awsRegion, responseElements, readOnly, accountId, eventCategory, accountId, with a limit of 44 ->","completion":" fields @timestamp, readOnly, userIdentity.invokedBy, userIdentity.accountId, userIdentity.principalId, eventName, requestParameters.vpcSet, eventType, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.webIdFederationData, eventID, userAgent, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, awsRegion, userIdentity.sessionContext.sessionIssuer.type, eventTime, eventCategory, awsRegion, responseElements, readOnly, userIdentity.accountId, eventCategory, userIdentity.accountId, | sort @timestamp desc | limit 44 ###"}
{"prompt":"Show me the fields responseElements, userName, recipientAccountId, principalId, principalId, arn, principalId, principalId, requestID, requestID, sourceIPAddress, userName, with a limit of 78 ->","completion":" fields @timestamp, responseElements, userIdentity.sessionContext.sessionIssuer.userName, recipientAccountId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, requestID, requestID, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 78 ###"}
{"prompt":"Show me the fields readOnly, filterSet, sourceIPAddress, type, type, eventCategory, managementEvent, managementEvent, userAgent, type, filterSet, managementEvent, with a limit of 76 ->","completion":" fields @timestamp, readOnly, requestParameters.filterSet, sourceIPAddress, userIdentity.type, userIdentity.type, eventCategory, managementEvent, managementEvent, userAgent, userIdentity.type, requestParameters.filterSet, managementEvent, | sort @timestamp desc | limit 76 ###"}
{"prompt":"Show me the fields recipientAccountId, sourceIPAddress, userAgent, userName, eventName, eventType, recipientAccountId, requestID, eventType, eventType, awsRegion, vpcSet, managementEvent, mfaAuthenticated, responseElements, eventType, managementEvent, mfaAuthenticated, sourceIPAddress, accountId, arn, creationDate, invokedBy, type, eventTime, with a limit of 44 ->","completion":" fields @timestamp, recipientAccountId, sourceIPAddress, userAgent, userIdentity.sessionContext.sessionIssuer.userName, eventName, eventType, recipientAccountId, requestID, eventType, eventType, awsRegion, requestParameters.vpcSet, managementEvent, userIdentity.sessionContext.attributes.mfaAuthenticated, responseElements, eventType, managementEvent, userIdentity.sessionContext.attributes.mfaAuthenticated, sourceIPAddress, userIdentity.accountId, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.invokedBy, userIdentity.type, eventTime, | sort @timestamp desc | limit 44 ###"}
{"prompt":"Show me the fields webIdFederationData, mfaAuthenticated, userAgent, eventVersion, arn, type, principalId, readOnly, webIdFederationData, awsRegion, requestID, eventVersion, creationDate, eventVersion, filterSet, invokedBy, eventCategory, responseElements, readOnly, with a limit of 86 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, userAgent, eventVersion, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, userIdentity.sessionContext.webIdFederationData, awsRegion, requestID, eventVersion, userIdentity.sessionContext.attributes.creationDate, eventVersion, requestParameters.filterSet, userIdentity.invokedBy, eventCategory, responseElements, readOnly, | sort @timestamp desc | limit 86 ###"}
{"prompt":"Show me the fields userName, filterSet, principalId, responseElements, type, type, sourceIPAddress, arn, type, principalId, webIdFederationData, eventCategory, eventCategory, eventCategory, recipientAccountId, type, filterSet, filterSet, eventVersion, accountId, recipientAccountId, creationDate, requestID, eventID, vpcSet, accountId, type, vpcSet, recipientAccountId, readOnly, with a limit of 29 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, responseElements, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.type, sourceIPAddress, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, eventCategory, eventCategory, eventCategory, recipientAccountId, userIdentity.type, requestParameters.filterSet, requestParameters.filterSet, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, requestID, eventID, requestParameters.vpcSet, userIdentity.accountId, userIdentity.type, requestParameters.vpcSet, recipientAccountId, readOnly, | sort @timestamp desc | limit 29 ###"}
{"prompt":"Show me the fields invokedBy, eventTime, arn, readOnly, managementEvent, mfaAuthenticated, requestID, with a limit of 17 ->","completion":" fields @timestamp, userIdentity.invokedBy, eventTime, userIdentity.sessionContext.sessionIssuer.arn, readOnly, managementEvent, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, | sort @timestamp desc | limit 17 ###"}
{"prompt":"Show me the fields principalId, filterSet, eventSource, creationDate, filterSet, eventCategory, with a limit of 71 ->","completion":" fields @timestamp, userIdentity.principalId, requestParameters.filterSet, eventSource, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, eventCategory, | sort @timestamp desc | limit 71 ###"}
{"prompt":"Show me the fields principalId, eventVersion, requestID, creationDate, principalId, eventName, creationDate, readOnly, arn, eventID, principalId, filterSet, awsRegion, readOnly, type, accountId, eventTime, eventVersion, eventType, with a limit of 31 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, eventVersion, requestID, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.sessionContext.attributes.creationDate, readOnly, userIdentity.arn, eventID, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.filterSet, awsRegion, readOnly, userIdentity.sessionContext.sessionIssuer.type, userIdentity.accountId, eventTime, eventVersion, eventType, | sort @timestamp desc | limit 31 ###"}
{"prompt":"Show me the fields userAgent, sourceIPAddress, eventTime, with a limit of 14 ->","completion":" fields @timestamp, userAgent, sourceIPAddress, eventTime, | sort @timestamp desc | limit 14 ###"}
{"prompt":"Show me the fields userName, eventTime, arn, with a limit of 34 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, eventTime, userIdentity.arn, | sort @timestamp desc | limit 34 ###"}
{"prompt":"Show me the fields eventCategory, awsRegion, type, type, recipientAccountId, readOnly, eventID, principalId, sourceIPAddress, filterSet, managementEvent, webIdFederationData, type, invokedBy, userAgent, recipientAccountId, eventSource, eventID, eventName, filterSet, responseElements, responseElements, awsRegion, recipientAccountId, vpcSet, userName, accountId, eventID, with a limit of 94 ->","completion":" fields @timestamp, eventCategory, awsRegion, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, readOnly, eventID, userIdentity.principalId, sourceIPAddress, requestParameters.filterSet, managementEvent, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.type, userIdentity.invokedBy, userAgent, recipientAccountId, eventSource, eventID, eventName, requestParameters.filterSet, responseElements, responseElements, awsRegion, recipientAccountId, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.accountId, eventID, | sort @timestamp desc | limit 94 ###"}
{"prompt":"Show me the fields eventVersion, awsRegion, arn, eventSource, accountId, with a limit of 35 ->","completion":" fields @timestamp, eventVersion, awsRegion, userIdentity.arn, eventSource, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 35 ###"}
{"prompt":"Show me the fields sourceIPAddress, awsRegion, principalId, type, principalId, eventID, sourceIPAddress, type, awsRegion, accountId, responseElements, requestID, sourceIPAddress, webIdFederationData, readOnly, filterSet, eventName, eventName, readOnly, eventID, eventTime, arn, with a limit of 86 ->","completion":" fields @timestamp, sourceIPAddress, awsRegion, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, eventID, sourceIPAddress, userIdentity.type, awsRegion, userIdentity.accountId, responseElements, requestID, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, readOnly, requestParameters.filterSet, eventName, eventName, readOnly, eventID, eventTime, userIdentity.arn, | sort @timestamp desc | limit 86 ###"}
{"prompt":"Show me the fields responseElements, vpcSet, userName, filterSet, readOnly, eventTime, creationDate, eventType, responseElements, creationDate, arn, eventCategory, userName, userName, eventVersion, arn, principalId, readOnly, webIdFederationData, principalId, readOnly, userAgent, userName, eventType, userName, vpcSet, readOnly, responseElements, eventID, with a limit of 95 ->","completion":" fields @timestamp, responseElements, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.filterSet, readOnly, eventTime, userIdentity.sessionContext.attributes.creationDate, eventType, responseElements, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, eventVersion, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, readOnly, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, userAgent, userIdentity.sessionContext.sessionIssuer.userName, eventType, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.vpcSet, readOnly, responseElements, eventID, | sort @timestamp desc | limit 95 ###"}
{"prompt":"Show me the fields eventTime, eventTime, readOnly, sourceIPAddress, eventVersion, eventVersion, mfaAuthenticated, responseElements, principalId, eventType, creationDate, type, webIdFederationData, awsRegion, vpcSet, principalId, with a limit of 40 ->","completion":" fields @timestamp, eventTime, eventTime, readOnly, sourceIPAddress, eventVersion, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, responseElements, userIdentity.principalId, eventType, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, awsRegion, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 40 ###"}
{"prompt":"Show me the fields readOnly, invokedBy, readOnly, principalId, principalId, webIdFederationData, eventSource, type, recipientAccountId, sourceIPAddress, eventName, principalId, invokedBy, awsRegion, accountId, accountId, userAgent, principalId, eventSource, eventType, creationDate, with a limit of 69 ->","completion":" fields @timestamp, readOnly, userIdentity.invokedBy, readOnly, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, eventSource, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, sourceIPAddress, eventName, userIdentity.principalId, userIdentity.invokedBy, awsRegion, userIdentity.accountId, userIdentity.accountId, userAgent, userIdentity.principalId, eventSource, eventType, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 69 ###"}
{"prompt":"Show me the fields eventName, with a limit of 28 ->","completion":" fields @timestamp, eventName, | sort @timestamp desc | limit 28 ###"}
{"prompt":"Show me the fields awsRegion, creationDate, eventTime, requestID, with a limit of 53 ->","completion":" fields @timestamp, awsRegion, userIdentity.sessionContext.attributes.creationDate, eventTime, requestID, | sort @timestamp desc | limit 53 ###"}
{"prompt":"Show me the fields mfaAuthenticated, filterSet, sourceIPAddress, managementEvent, sourceIPAddress, principalId, principalId, userAgent, requestID, with a limit of 2 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.filterSet, sourceIPAddress, managementEvent, sourceIPAddress, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userAgent, requestID, | sort @timestamp desc | limit 2 ###"}
{"prompt":"Show me the fields principalId, accountId, arn, accountId, responseElements, eventName, userAgent, principalId, eventTime, arn, accountId, vpcSet, filterSet, eventTime, eventTime, mfaAuthenticated, readOnly, eventType, creationDate, with a limit of 27 ->","completion":" fields @timestamp, userIdentity.principalId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.accountId, responseElements, eventName, userAgent, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, userIdentity.arn, userIdentity.accountId, requestParameters.vpcSet, requestParameters.filterSet, eventTime, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, readOnly, eventType, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 27 ###"}
{"prompt":"Show me the fields invokedBy, type, vpcSet, invokedBy, arn, filterSet, eventCategory, requestID, with a limit of 94 ->","completion":" fields @timestamp, userIdentity.invokedBy, userIdentity.type, requestParameters.vpcSet, userIdentity.invokedBy, userIdentity.arn, requestParameters.filterSet, eventCategory, requestID, | sort @timestamp desc | limit 94 ###"}
{"prompt":"Show me the fields webIdFederationData, userName, eventID, userAgent, eventType, type, eventType, with a limit of 47 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.userName, eventID, userAgent, eventType, userIdentity.sessionContext.sessionIssuer.type, eventType, | sort @timestamp desc | limit 47 ###"}
{"prompt":"Show me the fields userName, userAgent, managementEvent, eventTime, accountId, accountId, requestID, accountId, requestID, eventID, eventCategory, arn, arn, principalId, userName, creationDate, invokedBy, responseElements, arn, sourceIPAddress, eventSource, eventSource, accountId, accountId, eventID, managementEvent, eventCategory, eventSource, with a limit of 86 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, userAgent, managementEvent, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.accountId, requestID, userIdentity.accountId, requestID, eventID, eventCategory, userIdentity.arn, userIdentity.arn, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, userIdentity.invokedBy, responseElements, userIdentity.sessionContext.sessionIssuer.arn, sourceIPAddress, eventSource, eventSource, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.accountId, eventID, managementEvent, eventCategory, eventSource, | sort @timestamp desc | limit 86 ###"}
{"prompt":"Show me the fields responseElements, eventVersion, invokedBy, eventID, vpcSet, arn, sourceIPAddress, with a limit of 79 ->","completion":" fields @timestamp, responseElements, eventVersion, userIdentity.invokedBy, eventID, requestParameters.vpcSet, userIdentity.arn, sourceIPAddress, | sort @timestamp desc | limit 79 ###"}
{"prompt":"Show me the fields arn, type, vpcSet, eventType, with a limit of 12 ->","completion":" fields @timestamp, userIdentity.arn, userIdentity.type, requestParameters.vpcSet, eventType, | sort @timestamp desc | limit 12 ###"}
{"prompt":"Show me the fields eventName, accountId, invokedBy, accountId, accountId, accountId, principalId, type, principalId, eventType, sourceIPAddress, arn, type, vpcSet, mfaAuthenticated, requestID, type, readOnly, arn, eventVersion, mfaAuthenticated, managementEvent, responseElements, eventCategory, vpcSet, recipientAccountId, eventTime, with a limit of 9 ->","completion":" fields @timestamp, eventName, userIdentity.accountId, userIdentity.invokedBy, userIdentity.accountId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.principalId, userIdentity.type, userIdentity.principalId, eventType, sourceIPAddress, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, requestParameters.vpcSet, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, userIdentity.sessionContext.sessionIssuer.type, readOnly, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, managementEvent, responseElements, eventCategory, requestParameters.vpcSet, recipientAccountId, eventTime, | sort @timestamp desc | limit 9 ###"}
{"prompt":"Show me the fields filterSet, invokedBy, accountId, principalId, responseElements, requestID, accountId, eventID, with a limit of 14 ->","completion":" fields @timestamp, requestParameters.filterSet, userIdentity.invokedBy, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.principalId, responseElements, requestID, userIdentity.accountId, eventID, | sort @timestamp desc | limit 14 ###"}
{"prompt":"Show me the fields sourceIPAddress, with a limit of 20 ->","completion":" fields @timestamp, sourceIPAddress, | sort @timestamp desc | limit 20 ###"}
{"prompt":"Show me the fields readOnly, awsRegion, principalId, principalId, awsRegion, eventName, principalId, principalId, recipientAccountId, accountId, userName, recipientAccountId, eventTime, eventType, managementEvent, invokedBy, accountId, eventCategory, sourceIPAddress, accountId, awsRegion, eventType, mfaAuthenticated, with a limit of 21 ->","completion":" fields @timestamp, readOnly, awsRegion, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, eventName, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.principalId, recipientAccountId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, recipientAccountId, eventTime, eventType, managementEvent, userIdentity.invokedBy, userIdentity.accountId, eventCategory, sourceIPAddress, userIdentity.accountId, awsRegion, eventType, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 21 ###"}
{"prompt":"Show me the fields invokedBy, sourceIPAddress, userAgent, principalId, vpcSet, type, eventCategory, managementEvent, eventName, eventSource, principalId, creationDate, readOnly, type, awsRegion, with a limit of 70 ->","completion":" fields @timestamp, userIdentity.invokedBy, sourceIPAddress, userAgent, userIdentity.principalId, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.type, eventCategory, managementEvent, eventName, eventSource, userIdentity.principalId, userIdentity.sessionContext.attributes.creationDate, readOnly, userIdentity.type, awsRegion, | sort @timestamp desc | limit 70 ###"}
{"prompt":"Show me the fields type, webIdFederationData, with a limit of 81 ->","completion":" fields @timestamp, userIdentity.type, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 81 ###"}
{"prompt":"Show me the fields requestID, eventCategory, with a limit of 22 ->","completion":" fields @timestamp, requestID, eventCategory, | sort @timestamp desc | limit 22 ###"}
{"prompt":"Show me the fields webIdFederationData, eventName, creationDate, eventTime, accountId, sourceIPAddress, principalId, eventTime, eventName, type, recipientAccountId, invokedBy, eventTime, awsRegion, with a limit of 39 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, eventName, userIdentity.sessionContext.attributes.creationDate, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, userIdentity.principalId, eventTime, eventName, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, userIdentity.invokedBy, eventTime, awsRegion, | sort @timestamp desc | limit 39 ###"}
{"prompt":"Show me the fields eventID, awsRegion, vpcSet, with a limit of 77 ->","completion":" fields @timestamp, eventID, awsRegion, requestParameters.vpcSet, | sort @timestamp desc | limit 77 ###"}
{"prompt":"Show me the fields userAgent, webIdFederationData, accountId, eventName, userName, managementEvent, eventVersion, arn, eventVersion, eventCategory, vpcSet, principalId, principalId, eventName, eventSource, principalId, arn, filterSet, sourceIPAddress, accountId, mfaAuthenticated, type, sourceIPAddress, eventVersion, responseElements, eventID, arn, eventSource, arn, with a limit of 27 ->","completion":" fields @timestamp, userAgent, userIdentity.sessionContext.webIdFederationData, userIdentity.accountId, eventName, userIdentity.sessionContext.sessionIssuer.userName, managementEvent, eventVersion, userIdentity.arn, eventVersion, eventCategory, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.principalId, eventName, eventSource, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.arn, requestParameters.filterSet, sourceIPAddress, userIdentity.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.type, sourceIPAddress, eventVersion, responseElements, eventID, userIdentity.arn, eventSource, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 27 ###"}
{"prompt":"Show me the fields requestID, requestID, eventCategory, arn, eventSource, awsRegion, eventName, filterSet, awsRegion, eventCategory, recipientAccountId, principalId, with a limit of 89 ->","completion":" fields @timestamp, requestID, requestID, eventCategory, userIdentity.arn, eventSource, awsRegion, eventName, requestParameters.filterSet, awsRegion, eventCategory, recipientAccountId, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 89 ###"}
{"prompt":"Show me the fields eventType, principalId, userAgent, eventID, eventName, mfaAuthenticated, accountId, eventName, type, arn, requestID, eventSource, filterSet, userName, invokedBy, eventName, invokedBy, accountId, userName, accountId, accountId, eventType, principalId, managementEvent, eventType, userAgent, principalId, managementEvent, userAgent, accountId, with a limit of 49 ->","completion":" fields @timestamp, eventType, userIdentity.principalId, userAgent, eventID, eventName, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, eventName, userIdentity.type, userIdentity.arn, requestID, eventSource, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.invokedBy, eventName, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.accountId, userIdentity.accountId, eventType, userIdentity.sessionContext.sessionIssuer.principalId, managementEvent, eventType, userAgent, userIdentity.sessionContext.sessionIssuer.principalId, managementEvent, userAgent, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 49 ###"}
{"prompt":"Show me the fields arn, vpcSet, arn, eventTime, mfaAuthenticated, with a limit of 38 ->","completion":" fields @timestamp, userIdentity.arn, requestParameters.vpcSet, userIdentity.arn, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 38 ###"}
{"prompt":"Show me the fields mfaAuthenticated, eventName, eventVersion, responseElements, accountId, userName, userAgent, userName, requestID, creationDate, userAgent, arn, readOnly, type, eventSource, creationDate, accountId, eventSource, mfaAuthenticated, readOnly, type, eventID, arn, eventVersion, eventCategory, requestID, accountId, eventID, eventCategory, with a limit of 91 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, eventVersion, responseElements, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, userAgent, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.sessionContext.attributes.creationDate, userAgent, userIdentity.sessionContext.sessionIssuer.arn, readOnly, userIdentity.type, eventSource, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.accountId, eventSource, userIdentity.sessionContext.attributes.mfaAuthenticated, readOnly, userIdentity.type, eventID, userIdentity.arn, eventVersion, eventCategory, requestID, userIdentity.accountId, eventID, eventCategory, | sort @timestamp desc | limit 91 ###"}
{"prompt":"Show me the fields principalId, invokedBy, awsRegion, userAgent, vpcSet, mfaAuthenticated, eventName, userAgent, recipientAccountId, with a limit of 1 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, awsRegion, userAgent, requestParameters.vpcSet, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, userAgent, recipientAccountId, | sort @timestamp desc | limit 1 ###"}
{"prompt":"Show me the fields requestID, principalId, arn, arn, mfaAuthenticated, accountId, principalId, webIdFederationData, requestID, with a limit of 66 ->","completion":" fields @timestamp, requestID, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.arn, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, userIdentity.principalId, userIdentity.sessionContext.webIdFederationData, requestID, | sort @timestamp desc | limit 66 ###"}
{"prompt":"Show me the fields eventType, principalId, recipientAccountId, userName, requestID, sourceIPAddress, managementEvent, requestID, vpcSet, requestID, eventName, requestID, managementEvent, filterSet, readOnly, arn, eventTime, creationDate, accountId, principalId, eventName, recipientAccountId, arn, arn, type, managementEvent, type, principalId, filterSet, filterSet, with a limit of 83 ->","completion":" fields @timestamp, eventType, userIdentity.sessionContext.sessionIssuer.principalId, recipientAccountId, userIdentity.sessionContext.sessionIssuer.userName, requestID, sourceIPAddress, managementEvent, requestID, requestParameters.vpcSet, requestID, eventName, requestID, managementEvent, requestParameters.filterSet, readOnly, userIdentity.arn, eventTime, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.principalId, eventName, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, managementEvent, userIdentity.type, userIdentity.principalId, requestParameters.filterSet, requestParameters.filterSet, | sort @timestamp desc | limit 83 ###"}
{"prompt":"Show me the fields recipientAccountId, arn, eventCategory, type, type, requestID, eventVersion, with a limit of 58 ->","completion":" fields @timestamp, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, userIdentity.type, userIdentity.sessionContext.sessionIssuer.type, requestID, eventVersion, | sort @timestamp desc | limit 58 ###"}
{"prompt":"Show me the fields responseElements, requestID, with a limit of 9 ->","completion":" fields @timestamp, responseElements, requestID, | sort @timestamp desc | limit 9 ###"}
{"prompt":"Show me the fields awsRegion, principalId, webIdFederationData, mfaAuthenticated, invokedBy, recipientAccountId, recipientAccountId, arn, principalId, userName, awsRegion, mfaAuthenticated, arn, eventCategory, with a limit of 60 ->","completion":" fields @timestamp, awsRegion, userIdentity.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, recipientAccountId, recipientAccountId, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.userName, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, | sort @timestamp desc | limit 60 ###"}
{"prompt":"Show me the fields principalId, principalId, responseElements, recipientAccountId, creationDate, sourceIPAddress, recipientAccountId, with a limit of 31 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, responseElements, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, recipientAccountId, | sort @timestamp desc | limit 31 ###"}
{"prompt":"Show me the fields type, awsRegion, sourceIPAddress, creationDate, eventType, type, requestID, eventSource, accountId, with a limit of 7 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.type, awsRegion, sourceIPAddress, userIdentity.sessionContext.attributes.creationDate, eventType, userIdentity.type, requestID, eventSource, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 7 ###"}
{"prompt":"Show me the fields vpcSet, managementEvent, sourceIPAddress, arn, type, mfaAuthenticated, webIdFederationData, eventCategory, recipientAccountId, eventName, recipientAccountId, arn, arn, with a limit of 27 ->","completion":" fields @timestamp, requestParameters.vpcSet, managementEvent, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.type, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.webIdFederationData, eventCategory, recipientAccountId, eventName, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 27 ###"}
{"prompt":"Show me the fields readOnly, type, managementEvent, readOnly, accountId, awsRegion, arn, eventName, recipientAccountId, arn, accountId, userName, eventTime, vpcSet, eventTime, invokedBy, eventCategory, eventTime, eventType, invokedBy, filterSet, principalId, with a limit of 8 ->","completion":" fields @timestamp, readOnly, userIdentity.sessionContext.sessionIssuer.type, managementEvent, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, awsRegion, userIdentity.arn, eventName, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.userName, eventTime, requestParameters.vpcSet, eventTime, userIdentity.invokedBy, eventCategory, eventTime, eventType, userIdentity.invokedBy, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 8 ###"}
{"prompt":"Show me the fields awsRegion, eventType, eventID, arn, eventTime, readOnly, awsRegion, webIdFederationData, eventCategory, filterSet, with a limit of 52 ->","completion":" fields @timestamp, awsRegion, eventType, eventID, userIdentity.arn, eventTime, readOnly, awsRegion, userIdentity.sessionContext.webIdFederationData, eventCategory, requestParameters.filterSet, | sort @timestamp desc | limit 52 ###"}
{"prompt":"Show me the fields mfaAuthenticated, filterSet, eventTime, eventTime, recipientAccountId, eventName, eventType, eventVersion, arn, mfaAuthenticated, principalId, userName, userAgent, eventCategory, with a limit of 62 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.filterSet, eventTime, eventTime, recipientAccountId, eventName, eventType, eventVersion, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.userName, userAgent, eventCategory, | sort @timestamp desc | limit 62 ###"}
{"prompt":"Show me the fields arn, invokedBy, type, principalId, eventName, accountId, requestID, creationDate, filterSet, filterSet, readOnly, arn, invokedBy, type, eventName, managementEvent, vpcSet, sourceIPAddress, accountId, eventSource, accountId, managementEvent, accountId, responseElements, eventTime, with a limit of 36 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.accountId, requestID, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, requestParameters.filterSet, readOnly, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, userIdentity.type, eventName, managementEvent, requestParameters.vpcSet, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.accountId, eventSource, userIdentity.accountId, managementEvent, userIdentity.accountId, responseElements, eventTime, | sort @timestamp desc | limit 36 ###"}
{"prompt":"Show me the fields eventCategory, eventCategory, eventTime, accountId, userName, userName, eventName, eventName, principalId, filterSet, vpcSet, requestID, mfaAuthenticated, eventSource, arn, eventTime, eventCategory, type, principalId, filterSet, managementEvent, sourceIPAddress, userAgent, userAgent, awsRegion, with a limit of 24 ->","completion":" fields @timestamp, eventCategory, eventCategory, eventTime, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, eventName, eventName, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.filterSet, requestParameters.vpcSet, requestID, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, userIdentity.arn, eventTime, eventCategory, userIdentity.type, userIdentity.principalId, requestParameters.filterSet, managementEvent, sourceIPAddress, userAgent, userAgent, awsRegion, | sort @timestamp desc | limit 24 ###"}
{"prompt":"Show me the fields eventID, awsRegion, eventType, eventSource, awsRegion, eventVersion, eventCategory, eventName, managementEvent, userAgent, eventName, recipientAccountId, eventID, userName, arn, eventTime, awsRegion, mfaAuthenticated, eventID, readOnly, type, userName, eventName, readOnly, accountId, recipientAccountId, requestID, with a limit of 31 ->","completion":" fields @timestamp, eventID, awsRegion, eventType, eventSource, awsRegion, eventVersion, eventCategory, eventName, managementEvent, userAgent, eventName, recipientAccountId, eventID, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, eventTime, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, eventID, readOnly, userIdentity.type, userIdentity.sessionContext.sessionIssuer.userName, eventName, readOnly, userIdentity.accountId, recipientAccountId, requestID, | sort @timestamp desc | limit 31 ###"}
{"prompt":"Show me the fields arn, requestID, requestID, managementEvent, userName, responseElements, eventCategory, eventVersion, managementEvent, managementEvent, eventTime, userAgent, eventName, eventCategory, managementEvent, eventTime, type, accountId, accountId, type, eventSource, sourceIPAddress, webIdFederationData, readOnly, eventID, eventVersion, with a limit of 96 ->","completion":" fields @timestamp, userIdentity.arn, requestID, requestID, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, responseElements, eventCategory, eventVersion, managementEvent, managementEvent, eventTime, userAgent, eventName, eventCategory, managementEvent, eventTime, userIdentity.type, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.type, eventSource, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, readOnly, eventID, eventVersion, | sort @timestamp desc | limit 96 ###"}
{"prompt":"Show me the fields responseElements, recipientAccountId, eventSource, eventID, arn, arn, with a limit of 11 ->","completion":" fields @timestamp, responseElements, recipientAccountId, eventSource, eventID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.arn, | sort @timestamp desc | limit 11 ###"}
{"prompt":"Show me the fields arn, accountId, userName, vpcSet, recipientAccountId, eventCategory, arn, eventCategory, mfaAuthenticated, invokedBy, filterSet, recipientAccountId, eventName, filterSet, userName, webIdFederationData, eventID, accountId, eventTime, vpcSet, principalId, responseElements, responseElements, managementEvent, eventSource, eventTime, with a limit of 55 ->","completion":" fields @timestamp, userIdentity.arn, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.vpcSet, recipientAccountId, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, requestParameters.filterSet, recipientAccountId, eventName, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.webIdFederationData, eventID, userIdentity.sessionContext.sessionIssuer.accountId, eventTime, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.principalId, responseElements, responseElements, managementEvent, eventSource, eventTime, | sort @timestamp desc | limit 55 ###"}
{"prompt":"Show me the fields accountId, eventCategory, arn, invokedBy, principalId, userAgent, userAgent, with a limit of 47 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.accountId, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.principalId, userAgent, userAgent, | sort @timestamp desc | limit 47 ###"}
{"prompt":"Show me the fields principalId, readOnly, sourceIPAddress, eventID, creationDate, accountId, invokedBy, accountId, sourceIPAddress, requestID, mfaAuthenticated, accountId, eventVersion, mfaAuthenticated, eventSource, eventVersion, type, with a limit of 81 ->","completion":" fields @timestamp, userIdentity.principalId, readOnly, sourceIPAddress, eventID, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, requestID, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, eventVersion, userIdentity.type, | sort @timestamp desc | limit 81 ###"}
{"prompt":"Show me the fields eventName, sourceIPAddress, managementEvent, filterSet, awsRegion, principalId, eventTime, webIdFederationData, userName, with a limit of 37 ->","completion":" fields @timestamp, eventName, sourceIPAddress, managementEvent, requestParameters.filterSet, awsRegion, userIdentity.principalId, eventTime, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 37 ###"}
{"prompt":"Show me the fields filterSet, readOnly, readOnly, responseElements, filterSet, eventName, eventTime, readOnly, principalId, mfaAuthenticated, principalId, eventTime, mfaAuthenticated, arn, vpcSet, eventSource, mfaAuthenticated, with a limit of 50 ->","completion":" fields @timestamp, requestParameters.filterSet, readOnly, readOnly, responseElements, requestParameters.filterSet, eventName, eventTime, readOnly, userIdentity.principalId, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, eventSource, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 50 ###"}
{"prompt":"Show me the fields recipientAccountId, creationDate, principalId, arn, creationDate, awsRegion, filterSet, arn, accountId, eventSource, userName, eventTime, accountId, userName, userName, awsRegion, invokedBy, vpcSet, awsRegion, responseElements, invokedBy, eventID, accountId, eventVersion, eventID, awsRegion, responseElements, with a limit of 42 ->","completion":" fields @timestamp, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.attributes.creationDate, awsRegion, requestParameters.filterSet, userIdentity.arn, userIdentity.accountId, eventSource, userIdentity.sessionContext.sessionIssuer.userName, eventTime, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, awsRegion, userIdentity.invokedBy, requestParameters.vpcSet, awsRegion, responseElements, userIdentity.invokedBy, eventID, userIdentity.accountId, eventVersion, eventID, awsRegion, responseElements, | sort @timestamp desc | limit 42 ###"}
{"prompt":"Show me the fields awsRegion, eventCategory, awsRegion, filterSet, type, webIdFederationData, sourceIPAddress, principalId, accountId, type, eventType, eventTime, accountId, eventName, vpcSet, with a limit of 12 ->","completion":" fields @timestamp, awsRegion, eventCategory, awsRegion, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, sourceIPAddress, userIdentity.principalId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.type, eventType, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, eventName, requestParameters.vpcSet, | sort @timestamp desc | limit 12 ###"}
{"prompt":"Show me the fields userName, type, eventSource, eventName, accountId, principalId, recipientAccountId, eventTime, responseElements, recipientAccountId, managementEvent, awsRegion, principalId, managementEvent, eventVersion, userName, arn, with a limit of 70 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.type, eventSource, eventName, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.principalId, recipientAccountId, eventTime, responseElements, recipientAccountId, managementEvent, awsRegion, userIdentity.principalId, managementEvent, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, | sort @timestamp desc | limit 70 ###"}
{"prompt":"Show me the fields arn, requestID, eventType, recipientAccountId, principalId, eventSource, principalId, filterSet, awsRegion, userAgent, requestID, recipientAccountId, eventVersion, accountId, filterSet, principalId, type, sourceIPAddress, eventCategory, webIdFederationData, arn, principalId, recipientAccountId, eventVersion, eventCategory, eventCategory, readOnly, with a limit of 54 ->","completion":" fields @timestamp, userIdentity.arn, requestID, eventType, recipientAccountId, userIdentity.principalId, eventSource, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.filterSet, awsRegion, userAgent, requestID, recipientAccountId, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.filterSet, userIdentity.principalId, userIdentity.type, sourceIPAddress, eventCategory, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, recipientAccountId, eventVersion, eventCategory, eventCategory, readOnly, | sort @timestamp desc | limit 54 ###"}
{"prompt":"Show me the fields vpcSet, type, eventID, responseElements, eventCategory, principalId, eventTime, sourceIPAddress, managementEvent, principalId, sourceIPAddress, eventSource, readOnly, eventType, vpcSet, with a limit of 60 ->","completion":" fields @timestamp, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.type, eventID, responseElements, eventCategory, userIdentity.principalId, eventTime, sourceIPAddress, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, sourceIPAddress, eventSource, readOnly, eventType, requestParameters.vpcSet, | sort @timestamp desc | limit 60 ###"}
{"prompt":"Show me the fields accountId, eventName, type, principalId, awsRegion, eventTime, creationDate, accountId, creationDate, userAgent, eventTime, eventType, accountId, principalId, eventTime, filterSet, accountId, sourceIPAddress, creationDate, arn, invokedBy, recipientAccountId, accountId, accountId, accountId, eventVersion, eventVersion, accountId, arn, principalId, with a limit of 100 ->","completion":" fields @timestamp, userIdentity.accountId, eventName, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, eventTime, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, userAgent, eventTime, eventType, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, recipientAccountId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.accountId, eventVersion, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, | sort @timestamp desc | limit 100 ###"}
{"prompt":"Show me the fields type, mfaAuthenticated, eventSource, eventCategory, principalId, arn, awsRegion, userName, type, principalId, type, type, accountId, awsRegion, userAgent, mfaAuthenticated, eventTime, userAgent, type, readOnly, sourceIPAddress, userAgent, with a limit of 28 ->","completion":" fields @timestamp, userIdentity.type, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, eventCategory, userIdentity.principalId, userIdentity.arn, awsRegion, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.type, userIdentity.accountId, awsRegion, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, eventTime, userAgent, userIdentity.sessionContext.sessionIssuer.type, readOnly, sourceIPAddress, userAgent, | sort @timestamp desc | limit 28 ###"}
{"prompt":"Show me the fields userAgent, eventVersion, recipientAccountId, mfaAuthenticated, userAgent, creationDate, invokedBy, webIdFederationData, arn, eventTime, webIdFederationData, with a limit of 60 ->","completion":" fields @timestamp, userAgent, eventVersion, recipientAccountId, userIdentity.sessionContext.attributes.mfaAuthenticated, userAgent, userIdentity.sessionContext.attributes.creationDate, userIdentity.invokedBy, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.arn, eventTime, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 60 ###"}
{"prompt":"Show me the fields eventID, principalId, eventName, readOnly, awsRegion, filterSet, eventTime, userAgent, mfaAuthenticated, eventName, sourceIPAddress, webIdFederationData, eventVersion, type, userAgent, managementEvent, filterSet, eventCategory, recipientAccountId, eventTime, vpcSet, vpcSet, with a limit of 85 ->","completion":" fields @timestamp, eventID, userIdentity.sessionContext.sessionIssuer.principalId, eventName, readOnly, awsRegion, requestParameters.filterSet, eventTime, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, eventVersion, userIdentity.sessionContext.sessionIssuer.type, userAgent, managementEvent, requestParameters.filterSet, eventCategory, recipientAccountId, eventTime, requestParameters.vpcSet, requestParameters.vpcSet, | sort @timestamp desc | limit 85 ###"}
{"prompt":"Show me the fields userAgent, eventName, with a limit of 76 ->","completion":" fields @timestamp, userAgent, eventName, | sort @timestamp desc | limit 76 ###"}
{"prompt":"Show me the fields userAgent, eventVersion, eventType, eventID, managementEvent, eventCategory, principalId, principalId, userAgent, invokedBy, eventID, vpcSet, type, accountId, requestID, userName, requestID, invokedBy, principalId, requestID, with a limit of 25 ->","completion":" fields @timestamp, userAgent, eventVersion, eventType, eventID, managementEvent, eventCategory, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.principalId, userAgent, userIdentity.invokedBy, eventID, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.accountId, requestID, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.principalId, requestID, | sort @timestamp desc | limit 25 ###"}
{"prompt":"Show me the fields principalId, principalId, type, accountId, arn, principalId, eventType, eventCategory, userAgent, principalId, requestID, eventVersion, arn, webIdFederationData, awsRegion, type, accountId, userName, with a limit of 3 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, eventType, eventCategory, userAgent, userIdentity.sessionContext.sessionIssuer.principalId, requestID, eventVersion, userIdentity.arn, userIdentity.sessionContext.webIdFederationData, awsRegion, userIdentity.type, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 3 ###"}
{"prompt":"Show me the fields eventTime, with a limit of 51 ->","completion":" fields @timestamp, eventTime, | sort @timestamp desc | limit 51 ###"}
{"prompt":"Show me the fields sourceIPAddress, awsRegion, requestID, eventTime, eventID, filterSet, readOnly, recipientAccountId, managementEvent, principalId, vpcSet, responseElements, userAgent, eventType, sourceIPAddress, principalId, principalId, webIdFederationData, sourceIPAddress, arn, requestID, eventCategory, managementEvent, with a limit of 13 ->","completion":" fields @timestamp, sourceIPAddress, awsRegion, requestID, eventTime, eventID, requestParameters.filterSet, readOnly, recipientAccountId, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.vpcSet, responseElements, userAgent, eventType, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.arn, requestID, eventCategory, managementEvent, | sort @timestamp desc | limit 13 ###"}
{"prompt":"Show me the fields sourceIPAddress, eventName, mfaAuthenticated, accountId, vpcSet, principalId, creationDate, awsRegion, accountId, vpcSet, accountId, type, arn, filterSet, responseElements, with a limit of 54 ->","completion":" fields @timestamp, sourceIPAddress, eventName, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, requestParameters.vpcSet, userIdentity.principalId, userIdentity.sessionContext.attributes.creationDate, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.type, userIdentity.arn, requestParameters.filterSet, responseElements, | sort @timestamp desc | limit 54 ###"}
{"prompt":"Show me the fields filterSet, accountId, type, recipientAccountId, recipientAccountId, userAgent, eventType, principalId, accountId, eventType, invokedBy, accountId, invokedBy, readOnly, eventSource, sourceIPAddress, type, mfaAuthenticated, principalId, eventSource, vpcSet, principalId, userAgent, eventName, with a limit of 99 ->","completion":" fields @timestamp, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, recipientAccountId, userAgent, eventType, userIdentity.principalId, userIdentity.accountId, eventType, userIdentity.invokedBy, userIdentity.accountId, userIdentity.invokedBy, readOnly, eventSource, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.principalId, eventSource, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.principalId, userAgent, eventName, | sort @timestamp desc | limit 99 ###"}
{"prompt":"Show me the fields eventCategory, eventName, accountId, webIdFederationData, eventCategory, filterSet, userName, creationDate, principalId, eventName, eventType, userAgent, creationDate, eventName, awsRegion, readOnly, with a limit of 68 ->","completion":" fields @timestamp, eventCategory, eventName, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, eventCategory, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, eventName, eventType, userAgent, userIdentity.sessionContext.attributes.creationDate, eventName, awsRegion, readOnly, | sort @timestamp desc | limit 68 ###"}
{"prompt":"Show me the fields filterSet, filterSet, requestID, userName, arn, filterSet, accountId, vpcSet, eventCategory, principalId, eventVersion, userAgent, eventTime, webIdFederationData, requestID, type, with a limit of 60 ->","completion":" fields @timestamp, requestParameters.filterSet, requestParameters.filterSet, requestID, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.vpcSet, eventCategory, userIdentity.sessionContext.sessionIssuer.principalId, eventVersion, userAgent, eventTime, userIdentity.sessionContext.webIdFederationData, requestID, userIdentity.type, | sort @timestamp desc | limit 60 ###"}
{"prompt":"Show me the fields eventTime, with a limit of 58 ->","completion":" fields @timestamp, eventTime, | sort @timestamp desc | limit 58 ###"}
{"prompt":"Show me the fields eventVersion, sourceIPAddress, eventSource, eventID, recipientAccountId, type, eventVersion, invokedBy, arn, sourceIPAddress, recipientAccountId, readOnly, invokedBy, managementEvent, with a limit of 91 ->","completion":" fields @timestamp, eventVersion, sourceIPAddress, eventSource, eventID, recipientAccountId, userIdentity.sessionContext.sessionIssuer.type, eventVersion, userIdentity.invokedBy, userIdentity.arn, sourceIPAddress, recipientAccountId, readOnly, userIdentity.invokedBy, managementEvent, | sort @timestamp desc | limit 91 ###"}
{"prompt":"Show me the fields type, type, arn, userName, eventSource, arn, invokedBy, accountId, eventSource, managementEvent, webIdFederationData, invokedBy, mfaAuthenticated, creationDate, eventVersion, userName, with a limit of 44 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.type, userIdentity.type, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.userName, eventSource, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, userIdentity.accountId, eventSource, managementEvent, userIdentity.sessionContext.webIdFederationData, userIdentity.invokedBy, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.creationDate, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 44 ###"}
{"prompt":"Show me the fields recipientAccountId, accountId, awsRegion, filterSet, eventName, webIdFederationData, userName, eventTime, accountId, invokedBy, accountId, userAgent, filterSet, eventTime, readOnly, with a limit of 35 ->","completion":" fields @timestamp, recipientAccountId, userIdentity.accountId, awsRegion, requestParameters.filterSet, eventName, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.userName, eventTime, userIdentity.accountId, userIdentity.invokedBy, userIdentity.accountId, userAgent, requestParameters.filterSet, eventTime, readOnly, | sort @timestamp desc | limit 35 ###"}
{"prompt":"Show me the fields eventName, eventCategory, mfaAuthenticated, arn, vpcSet, eventCategory, arn, principalId, principalId, eventName, eventCategory, mfaAuthenticated, mfaAuthenticated, with a limit of 67 ->","completion":" fields @timestamp, eventName, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, eventName, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 67 ###"}
{"prompt":"Show me the fields managementEvent, mfaAuthenticated, vpcSet, readOnly, eventSource, requestID, awsRegion, requestID, arn, eventID, requestID, readOnly, type, sourceIPAddress, accountId, sourceIPAddress, eventName, recipientAccountId, eventName, accountId, eventSource, arn, arn, eventSource, arn, with a limit of 51 ->","completion":" fields @timestamp, managementEvent, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, readOnly, eventSource, requestID, awsRegion, requestID, userIdentity.arn, eventID, requestID, readOnly, userIdentity.sessionContext.sessionIssuer.type, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, eventName, recipientAccountId, eventName, userIdentity.accountId, eventSource, userIdentity.arn, userIdentity.arn, eventSource, userIdentity.arn, | sort @timestamp desc | limit 51 ###"}
{"prompt":"Show me the fields webIdFederationData, with a limit of 41 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 41 ###"}
{"prompt":"Show me the fields arn, mfaAuthenticated, mfaAuthenticated, mfaAuthenticated, type, webIdFederationData, userAgent, eventType, arn, recipientAccountId, recipientAccountId, eventType, eventVersion, arn, accountId, invokedBy, mfaAuthenticated, principalId, readOnly, eventSource, awsRegion, with a limit of 14 ->","completion":" fields @timestamp, userIdentity.arn, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, userAgent, eventType, userIdentity.arn, recipientAccountId, recipientAccountId, eventType, eventVersion, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.principalId, readOnly, eventSource, awsRegion, | sort @timestamp desc | limit 14 ###"}
{"prompt":"Show me the fields awsRegion, vpcSet, userName, eventSource, awsRegion, eventVersion, responseElements, principalId, with a limit of 87 ->","completion":" fields @timestamp, awsRegion, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.userName, eventSource, awsRegion, eventVersion, responseElements, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 87 ###"}
{"prompt":"Show me the fields recipientAccountId, awsRegion, accountId, sourceIPAddress, type, eventSource, recipientAccountId, eventName, mfaAuthenticated, filterSet, with a limit of 18 ->","completion":" fields @timestamp, recipientAccountId, awsRegion, userIdentity.accountId, sourceIPAddress, userIdentity.type, eventSource, recipientAccountId, eventName, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.filterSet, | sort @timestamp desc | limit 18 ###"}
{"prompt":"Show me the fields sourceIPAddress, readOnly, eventVersion, userName, eventName, responseElements, eventCategory, userName, eventName, mfaAuthenticated, eventID, recipientAccountId, creationDate, requestID, readOnly, requestID, requestID, eventTime, with a limit of 72 ->","completion":" fields @timestamp, sourceIPAddress, readOnly, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, eventName, responseElements, eventCategory, userIdentity.sessionContext.sessionIssuer.userName, eventName, userIdentity.sessionContext.attributes.mfaAuthenticated, eventID, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, requestID, readOnly, requestID, requestID, eventTime, | sort @timestamp desc | limit 72 ###"}
{"prompt":"Show me the fields eventCategory, type, eventTime, eventVersion, with a limit of 9 ->","completion":" fields @timestamp, eventCategory, userIdentity.type, eventTime, eventVersion, | sort @timestamp desc | limit 9 ###"}
{"prompt":"Show me the fields readOnly, principalId, managementEvent, awsRegion, readOnly, with a limit of 54 ->","completion":" fields @timestamp, readOnly, userIdentity.sessionContext.sessionIssuer.principalId, managementEvent, awsRegion, readOnly, | sort @timestamp desc | limit 54 ###"}
{"prompt":"Show me the fields type, userAgent, principalId, eventID, userAgent, eventType, eventTime, accountId, userName, arn, awsRegion, userAgent, eventCategory, with a limit of 80 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.type, userAgent, userIdentity.principalId, eventID, userAgent, eventType, eventTime, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, awsRegion, userAgent, eventCategory, | sort @timestamp desc | limit 80 ###"}
{"prompt":"Show me the fields eventSource, managementEvent, principalId, arn, eventName, accountId, sourceIPAddress, readOnly, accountId, webIdFederationData, sourceIPAddress, userName, type, filterSet, responseElements, arn, principalId, awsRegion, userAgent, userName, userName, managementEvent, mfaAuthenticated, with a limit of 52 ->","completion":" fields @timestamp, eventSource, managementEvent, userIdentity.principalId, userIdentity.arn, eventName, userIdentity.accountId, sourceIPAddress, readOnly, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.type, requestParameters.filterSet, responseElements, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, userAgent, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, managementEvent, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 52 ###"}
{"prompt":"Show me the fields managementEvent, eventSource, eventSource, vpcSet, eventType, responseElements, invokedBy, accountId, with a limit of 48 ->","completion":" fields @timestamp, managementEvent, eventSource, eventSource, requestParameters.vpcSet, eventType, responseElements, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 48 ###"}
{"prompt":"Show me the fields creationDate, awsRegion, type, type, vpcSet, managementEvent, principalId, accountId, eventName, invokedBy, with a limit of 62 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, awsRegion, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.type, requestParameters.vpcSet, managementEvent, userIdentity.principalId, userIdentity.accountId, eventName, userIdentity.invokedBy, | sort @timestamp desc | limit 62 ###"}
{"prompt":"Show me the fields eventCategory, managementEvent, filterSet, readOnly, arn, type, userName, vpcSet, accountId, readOnly, responseElements, eventType, userAgent, accountId, type, eventID, awsRegion, eventID, responseElements, readOnly, userName, arn, webIdFederationData, eventTime, eventVersion, mfaAuthenticated, accountId, arn, type, with a limit of 56 ->","completion":" fields @timestamp, eventCategory, managementEvent, requestParameters.filterSet, readOnly, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.vpcSet, userIdentity.accountId, readOnly, responseElements, eventType, userAgent, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.type, eventID, awsRegion, eventID, responseElements, readOnly, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, eventTime, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.type, | sort @timestamp desc | limit 56 ###"}
{"prompt":"Show me the fields arn, eventType, eventName, managementEvent, type, awsRegion, accountId, eventID, eventCategory, type, creationDate, filterSet, creationDate, arn, readOnly, eventVersion, eventTime, eventType, requestID, vpcSet, invokedBy, managementEvent, vpcSet, sourceIPAddress, arn, vpcSet, with a limit of 35 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, eventType, eventName, managementEvent, userIdentity.type, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, eventID, eventCategory, userIdentity.type, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, readOnly, eventVersion, eventTime, eventType, requestID, requestParameters.vpcSet, userIdentity.invokedBy, managementEvent, requestParameters.vpcSet, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, | sort @timestamp desc | limit 35 ###"}
{"prompt":"Show me the fields eventVersion, principalId, responseElements, with a limit of 15 ->","completion":" fields @timestamp, eventVersion, userIdentity.sessionContext.sessionIssuer.principalId, responseElements, | sort @timestamp desc | limit 15 ###"}
{"prompt":"Show me the fields recipientAccountId, readOnly, eventTime, eventID, awsRegion, principalId, eventTime, eventName, webIdFederationData, eventID, userName, eventType, requestID, creationDate, accountId, arn, readOnly, awsRegion, eventType, invokedBy, eventName, recipientAccountId, eventID, mfaAuthenticated, with a limit of 23 ->","completion":" fields @timestamp, recipientAccountId, readOnly, eventTime, eventID, awsRegion, userIdentity.principalId, eventTime, eventName, userIdentity.sessionContext.webIdFederationData, eventID, userIdentity.sessionContext.sessionIssuer.userName, eventType, requestID, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, userIdentity.arn, readOnly, awsRegion, eventType, userIdentity.invokedBy, eventName, recipientAccountId, eventID, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 23 ###"}
{"prompt":"Show me the fields sourceIPAddress, responseElements, awsRegion, webIdFederationData, requestID, requestID, eventCategory, readOnly, eventID, eventTime, requestID, arn, eventCategory, managementEvent, eventName, eventSource, with a limit of 2 ->","completion":" fields @timestamp, sourceIPAddress, responseElements, awsRegion, userIdentity.sessionContext.webIdFederationData, requestID, requestID, eventCategory, readOnly, eventID, eventTime, requestID, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, managementEvent, eventName, eventSource, | sort @timestamp desc | limit 2 ###"}
{"prompt":"Show me the fields managementEvent, eventCategory, readOnly, filterSet, filterSet, principalId, mfaAuthenticated, readOnly, recipientAccountId, creationDate, eventSource, userName, readOnly, readOnly, eventSource, arn, accountId, eventCategory, arn, responseElements, mfaAuthenticated, filterSet, eventType, eventName, with a limit of 71 ->","completion":" fields @timestamp, managementEvent, eventCategory, readOnly, requestParameters.filterSet, requestParameters.filterSet, userIdentity.principalId, userIdentity.sessionContext.attributes.mfaAuthenticated, readOnly, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, eventSource, userIdentity.sessionContext.sessionIssuer.userName, readOnly, readOnly, eventSource, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.accountId, eventCategory, userIdentity.arn, responseElements, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.filterSet, eventType, eventName, | sort @timestamp desc | limit 71 ###"}
{"prompt":"Show me the fields awsRegion, filterSet, eventType, type, invokedBy, filterSet, userName, accountId, arn, sourceIPAddress, creationDate, userAgent, sourceIPAddress, sourceIPAddress, responseElements, readOnly, eventSource, type, managementEvent, type, eventID, with a limit of 81 ->","completion":" fields @timestamp, awsRegion, requestParameters.filterSet, eventType, userIdentity.sessionContext.sessionIssuer.type, userIdentity.invokedBy, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.arn, sourceIPAddress, userIdentity.sessionContext.attributes.creationDate, userAgent, sourceIPAddress, sourceIPAddress, responseElements, readOnly, eventSource, userIdentity.sessionContext.sessionIssuer.type, managementEvent, userIdentity.sessionContext.sessionIssuer.type, eventID, | sort @timestamp desc | limit 81 ###"}
{"prompt":"Show me the fields creationDate, eventType, invokedBy, eventCategory, eventID, creationDate, eventType, filterSet, accountId, creationDate, mfaAuthenticated, eventType, vpcSet, eventSource, eventSource, requestID, awsRegion, accountId, webIdFederationData, creationDate, userName, eventType, userAgent, mfaAuthenticated, with a limit of 81 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, eventType, userIdentity.invokedBy, eventCategory, eventID, userIdentity.sessionContext.attributes.creationDate, eventType, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.mfaAuthenticated, eventType, requestParameters.vpcSet, eventSource, eventSource, requestID, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.userName, eventType, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 81 ###"}
{"prompt":"Show me the fields eventID, requestID, eventID, creationDate, accountId, eventTime, readOnly, arn, accountId, webIdFederationData, principalId, recipientAccountId, arn, userAgent, eventCategory, accountId, eventID, sourceIPAddress, webIdFederationData, vpcSet, arn, userName, eventName, mfaAuthenticated, invokedBy, eventCategory, mfaAuthenticated, arn, with a limit of 59 ->","completion":" fields @timestamp, eventID, requestID, eventID, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.accountId, eventTime, readOnly, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.principalId, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, userAgent, eventCategory, userIdentity.sessionContext.sessionIssuer.accountId, eventID, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.userName, eventName, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 59 ###"}
{"prompt":"Show me the fields accountId, readOnly, accountId, eventID, principalId, recipientAccountId, readOnly, accountId, creationDate, webIdFederationData, webIdFederationData, eventVersion, eventID, with a limit of 79 ->","completion":" fields @timestamp, userIdentity.accountId, readOnly, userIdentity.accountId, eventID, userIdentity.principalId, recipientAccountId, readOnly, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.webIdFederationData, eventVersion, eventID, | sort @timestamp desc | limit 79 ###"}
{"prompt":"Show me the fields recipientAccountId, eventCategory, type, eventID, userAgent, eventVersion, eventTime, invokedBy, eventType, eventName, arn, arn, creationDate, managementEvent, recipientAccountId, accountId, arn, eventVersion, invokedBy, principalId, filterSet, eventID, type, arn, arn, with a limit of 29 ->","completion":" fields @timestamp, recipientAccountId, eventCategory, userIdentity.sessionContext.sessionIssuer.type, eventID, userAgent, eventVersion, eventTime, userIdentity.invokedBy, eventType, eventName, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, managementEvent, recipientAccountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.filterSet, eventID, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 29 ###"}
{"prompt":"Show me the fields readOnly, filterSet, invokedBy, eventTime, sourceIPAddress, eventID, type, eventVersion, with a limit of 40 ->","completion":" fields @timestamp, readOnly, requestParameters.filterSet, userIdentity.invokedBy, eventTime, sourceIPAddress, eventID, userIdentity.type, eventVersion, | sort @timestamp desc | limit 40 ###"}
{"prompt":"Show me the fields accountId, awsRegion, mfaAuthenticated, accountId, userAgent, recipientAccountId, invokedBy, arn, responseElements, requestID, userName, principalId, arn, filterSet, managementEvent, userName, arn, principalId, awsRegion, requestID, eventID, accountId, eventSource, userAgent, eventVersion, type, type, sourceIPAddress, with a limit of 4 ->","completion":" fields @timestamp, userIdentity.accountId, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, userAgent, recipientAccountId, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.arn, responseElements, requestID, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, requestID, eventID, userIdentity.sessionContext.sessionIssuer.accountId, eventSource, userAgent, eventVersion, userIdentity.sessionContext.sessionIssuer.type, userIdentity.type, sourceIPAddress, | sort @timestamp desc | limit 4 ###"}
{"prompt":"Show me the fields sourceIPAddress, eventSource, principalId, arn, invokedBy, eventTime, recipientAccountId, webIdFederationData, eventID, eventTime, with a limit of 42 ->","completion":" fields @timestamp, sourceIPAddress, eventSource, userIdentity.principalId, userIdentity.arn, userIdentity.invokedBy, eventTime, recipientAccountId, userIdentity.sessionContext.webIdFederationData, eventID, eventTime, | sort @timestamp desc | limit 42 ###"}
{"prompt":"Show me the fields accountId, accountId, with a limit of 84 ->","completion":" fields @timestamp, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 84 ###"}
{"prompt":"Show me the fields responseElements, arn, requestID, userAgent, filterSet, creationDate, eventID, vpcSet, recipientAccountId, mfaAuthenticated, eventSource, principalId, creationDate, accountId, mfaAuthenticated, requestID, arn, sourceIPAddress, with a limit of 20 ->","completion":" fields @timestamp, responseElements, userIdentity.arn, requestID, userAgent, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, eventID, requestParameters.vpcSet, recipientAccountId, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, userIdentity.arn, sourceIPAddress, | sort @timestamp desc | limit 20 ###"}
{"prompt":"Show me the fields webIdFederationData, with a limit of 84 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 84 ###"}
{"prompt":"Show me the fields userAgent, managementEvent, eventVersion, awsRegion, filterSet, accountId, sourceIPAddress, principalId, principalId, userName, mfaAuthenticated, managementEvent, creationDate, principalId, eventName, webIdFederationData, vpcSet, requestID, with a limit of 15 ->","completion":" fields @timestamp, userAgent, managementEvent, eventVersion, awsRegion, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.mfaAuthenticated, managementEvent, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, requestID, | sort @timestamp desc | limit 15 ###"}
{"prompt":"Show me the fields vpcSet, accountId, eventCategory, userName, eventTime, mfaAuthenticated, eventID, arn, principalId, readOnly, eventCategory, creationDate, principalId, userName, userName, userAgent, filterSet, arn, principalId, eventName, invokedBy, arn, with a limit of 87 ->","completion":" fields @timestamp, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.accountId, eventCategory, userIdentity.sessionContext.sessionIssuer.userName, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, eventID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, eventCategory, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, userAgent, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.invokedBy, userIdentity.arn, | sort @timestamp desc | limit 87 ###"}
{"prompt":"Show me the fields userName, principalId, mfaAuthenticated, eventSource, responseElements, creationDate, filterSet, webIdFederationData, creationDate, webIdFederationData, eventSource, eventTime, mfaAuthenticated, recipientAccountId, recipientAccountId, invokedBy, arn, accountId, accountId, eventTime, managementEvent, readOnly, readOnly, userName, recipientAccountId, webIdFederationData, accountId, arn, arn, with a limit of 95 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.principalId, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, responseElements, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.webIdFederationData, eventSource, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, recipientAccountId, recipientAccountId, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.accountId, eventTime, managementEvent, readOnly, readOnly, userIdentity.sessionContext.sessionIssuer.userName, recipientAccountId, userIdentity.sessionContext.webIdFederationData, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 95 ###"}
{"prompt":"Show me the fields arn, filterSet, accountId, eventName, accountId, mfaAuthenticated, type, responseElements, userAgent, sourceIPAddress, eventSource, type, eventVersion, filterSet, type, creationDate, eventCategory, eventType, responseElements, userName, arn, with a limit of 82 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.accountId, eventName, userIdentity.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.type, responseElements, userAgent, sourceIPAddress, eventSource, userIdentity.type, eventVersion, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.creationDate, eventCategory, eventType, responseElements, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, | sort @timestamp desc | limit 82 ###"}
{"prompt":"Show me the fields userAgent, eventID, sourceIPAddress, vpcSet, eventVersion, userName, vpcSet, accountId, creationDate, mfaAuthenticated, eventName, userName, accountId, eventCategory, eventName, eventType, eventID, eventTime, type, readOnly, eventID, arn, awsRegion, webIdFederationData, with a limit of 79 ->","completion":" fields @timestamp, userAgent, eventID, sourceIPAddress, requestParameters.vpcSet, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.vpcSet, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.accountId, eventCategory, eventName, eventType, eventID, eventTime, userIdentity.type, readOnly, eventID, userIdentity.arn, awsRegion, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 79 ###"}
{"prompt":"Show me the fields arn, eventTime, type, eventType, userAgent, awsRegion, accountId, arn, accountId, with a limit of 89 ->","completion":" fields @timestamp, userIdentity.arn, eventTime, userIdentity.sessionContext.sessionIssuer.type, eventType, userAgent, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.arn, userIdentity.accountId, | sort @timestamp desc | limit 89 ###"}
{"prompt":"Show me the fields vpcSet, arn, principalId, eventVersion, userName, principalId, eventSource, arn, eventSource, userName, requestID, webIdFederationData, readOnly, with a limit of 15 ->","completion":" fields @timestamp, requestParameters.vpcSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.principalId, eventSource, userIdentity.sessionContext.sessionIssuer.arn, eventSource, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.sessionContext.webIdFederationData, readOnly, | sort @timestamp desc | limit 15 ###"}
{"prompt":"Show me the fields eventTime, sourceIPAddress, principalId, creationDate, arn, managementEvent, managementEvent, sourceIPAddress, eventCategory, eventName, accountId, requestID, arn, requestID, filterSet, eventID, awsRegion, eventCategory, arn, accountId, filterSet, responseElements, accountId, eventTime, sourceIPAddress, accountId, requestID, webIdFederationData, with a limit of 26 ->","completion":" fields @timestamp, eventTime, sourceIPAddress, userIdentity.principalId, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, managementEvent, managementEvent, sourceIPAddress, eventCategory, eventName, userIdentity.accountId, requestID, userIdentity.arn, requestID, requestParameters.filterSet, eventID, awsRegion, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.filterSet, responseElements, userIdentity.accountId, eventTime, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.accountId, requestID, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 26 ###"}
{"prompt":"Show me the fields awsRegion, type, eventID, accountId, filterSet, principalId, userAgent, userAgent, type, accountId, eventCategory, readOnly, sourceIPAddress, eventID, webIdFederationData, with a limit of 47 ->","completion":" fields @timestamp, awsRegion, userIdentity.type, eventID, userIdentity.accountId, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, userAgent, userAgent, userIdentity.type, userIdentity.sessionContext.sessionIssuer.accountId, eventCategory, readOnly, sourceIPAddress, eventID, userIdentity.sessionContext.webIdFederationData, | sort @timestamp desc | limit 47 ###"}
{"prompt":"Show me the fields eventID, recipientAccountId, creationDate, type, awsRegion, eventVersion, userName, managementEvent, userAgent, filterSet, eventType, with a limit of 18 ->","completion":" fields @timestamp, eventID, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.type, awsRegion, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, managementEvent, userAgent, requestParameters.filterSet, eventType, | sort @timestamp desc | limit 18 ###"}
{"prompt":"Show me the fields vpcSet, eventVersion, userAgent, type, filterSet, eventSource, arn, responseElements, userAgent, principalId, type, eventID, recipientAccountId, managementEvent, invokedBy, userAgent, arn, creationDate, arn, principalId, eventVersion, eventID, eventID, invokedBy, accountId, with a limit of 45 ->","completion":" fields @timestamp, requestParameters.vpcSet, eventVersion, userAgent, userIdentity.sessionContext.sessionIssuer.type, requestParameters.filterSet, eventSource, userIdentity.arn, responseElements, userAgent, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, eventID, recipientAccountId, managementEvent, userIdentity.invokedBy, userAgent, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, userIdentity.principalId, eventVersion, eventID, eventID, userIdentity.invokedBy, userIdentity.accountId, | sort @timestamp desc | limit 45 ###"}
{"prompt":"Show me the fields eventSource, mfaAuthenticated, arn, eventCategory, with a limit of 100 ->","completion":" fields @timestamp, eventSource, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.arn, eventCategory, | sort @timestamp desc | limit 100 ###"}
{"prompt":"Show me the fields type, vpcSet, type, accountId, sourceIPAddress, requestID, responseElements, managementEvent, arn, vpcSet, recipientAccountId, recipientAccountId, eventID, eventCategory, filterSet, mfaAuthenticated, accountId, recipientAccountId, type, type, readOnly, accountId, filterSet, eventID, arn, responseElements, userName, with a limit of 27 ->","completion":" fields @timestamp, userIdentity.type, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, requestID, responseElements, managementEvent, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, recipientAccountId, recipientAccountId, eventID, eventCategory, requestParameters.filterSet, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, recipientAccountId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.type, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.filterSet, eventID, userIdentity.sessionContext.sessionIssuer.arn, responseElements, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 27 ###"}
{"prompt":"Show me the fields eventTime, awsRegion, responseElements, awsRegion, eventTime, sourceIPAddress, principalId, webIdFederationData, invokedBy, arn, webIdFederationData, vpcSet, eventSource, type, filterSet, with a limit of 82 ->","completion":" fields @timestamp, eventTime, awsRegion, responseElements, awsRegion, eventTime, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.invokedBy, userIdentity.arn, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, eventSource, userIdentity.type, requestParameters.filterSet, | sort @timestamp desc | limit 82 ###"}
{"prompt":"Show me the fields readOnly, recipientAccountId, readOnly, type, principalId, arn, webIdFederationData, creationDate, principalId, accountId, accountId, filterSet, arn, eventVersion, recipientAccountId, sourceIPAddress, responseElements, eventVersion, mfaAuthenticated, type, creationDate, principalId, eventTime, with a limit of 53 ->","completion":" fields @timestamp, readOnly, recipientAccountId, readOnly, userIdentity.type, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.accountId, requestParameters.filterSet, userIdentity.arn, eventVersion, recipientAccountId, sourceIPAddress, responseElements, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.type, userIdentity.sessionContext.attributes.creationDate, userIdentity.principalId, eventTime, | sort @timestamp desc | limit 53 ###"}
{"prompt":"Show me the fields awsRegion, eventCategory, eventVersion, readOnly, eventType, type, eventSource, webIdFederationData, eventType, webIdFederationData, creationDate, with a limit of 18 ->","completion":" fields @timestamp, awsRegion, eventCategory, eventVersion, readOnly, eventType, userIdentity.sessionContext.sessionIssuer.type, eventSource, userIdentity.sessionContext.webIdFederationData, eventType, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 18 ###"}
{"prompt":"Show me the fields recipientAccountId, principalId, eventName, awsRegion, mfaAuthenticated, accountId, accountId, userName, requestID, creationDate, awsRegion, eventName, responseElements, awsRegion, vpcSet, eventTime, filterSet, sourceIPAddress, sourceIPAddress, creationDate, sourceIPAddress, type, principalId, principalId, with a limit of 33 ->","completion":" fields @timestamp, recipientAccountId, userIdentity.sessionContext.sessionIssuer.principalId, eventName, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.sessionContext.attributes.creationDate, awsRegion, eventName, responseElements, awsRegion, requestParameters.vpcSet, eventTime, requestParameters.filterSet, sourceIPAddress, sourceIPAddress, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, userIdentity.type, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 33 ###"}
{"prompt":"Show me the fields arn, eventVersion, principalId, eventID, eventTime, principalId, filterSet, invokedBy, eventType, principalId, type, readOnly, arn, type, readOnly, requestID, recipientAccountId, managementEvent, eventVersion, eventCategory, sourceIPAddress, awsRegion, type, webIdFederationData, awsRegion, recipientAccountId, eventCategory, eventName, creationDate, with a limit of 78 ->","completion":" fields @timestamp, userIdentity.arn, eventVersion, userIdentity.sessionContext.sessionIssuer.principalId, eventID, eventTime, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.filterSet, userIdentity.invokedBy, eventType, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.type, readOnly, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.type, readOnly, requestID, recipientAccountId, managementEvent, eventVersion, eventCategory, sourceIPAddress, awsRegion, userIdentity.type, userIdentity.sessionContext.webIdFederationData, awsRegion, recipientAccountId, eventCategory, eventName, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 78 ###"}
{"prompt":"Show me the fields recipientAccountId, vpcSet, awsRegion, vpcSet, eventCategory, arn, sourceIPAddress, accountId, with a limit of 71 ->","completion":" fields @timestamp, recipientAccountId, requestParameters.vpcSet, awsRegion, requestParameters.vpcSet, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 71 ###"}
{"prompt":"Show me the fields eventSource, with a limit of 76 ->","completion":" fields @timestamp, eventSource, | sort @timestamp desc | limit 76 ###"}
{"prompt":"Show me the fields eventType, vpcSet, eventID, eventName, type, webIdFederationData, eventCategory, accountId, webIdFederationData, eventTime, eventCategory, mfaAuthenticated, principalId, eventName, creationDate, responseElements, eventID, sourceIPAddress, arn, creationDate, arn, with a limit of 5 ->","completion":" fields @timestamp, eventType, requestParameters.vpcSet, eventID, eventName, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, eventCategory, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, eventTime, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.principalId, eventName, userIdentity.sessionContext.attributes.creationDate, responseElements, eventID, sourceIPAddress, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, | sort @timestamp desc | limit 5 ###"}
{"prompt":"Show me the fields eventID, mfaAuthenticated, accountId, invokedBy, eventSource, userAgent, vpcSet, eventSource, eventID, invokedBy, sourceIPAddress, eventVersion, principalId, readOnly, responseElements, managementEvent, arn, eventCategory, responseElements, eventSource, readOnly, accountId, creationDate, with a limit of 42 ->","completion":" fields @timestamp, eventID, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, eventSource, userAgent, requestParameters.vpcSet, eventSource, eventID, userIdentity.invokedBy, sourceIPAddress, eventVersion, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, responseElements, managementEvent, userIdentity.arn, eventCategory, responseElements, eventSource, readOnly, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 42 ###"}
{"prompt":"Show me the fields eventID, userAgent, recipientAccountId, principalId, eventID, arn, awsRegion, recipientAccountId, awsRegion, awsRegion, recipientAccountId, sourceIPAddress, eventVersion, eventVersion, mfaAuthenticated, eventSource, eventCategory, eventType, recipientAccountId, mfaAuthenticated, requestID, arn, arn, creationDate, filterSet, webIdFederationData, invokedBy, arn, principalId, with a limit of 82 ->","completion":" fields @timestamp, eventID, userAgent, recipientAccountId, userIdentity.principalId, eventID, userIdentity.arn, awsRegion, recipientAccountId, awsRegion, awsRegion, recipientAccountId, sourceIPAddress, eventVersion, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, eventCategory, eventType, recipientAccountId, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, userIdentity.sessionContext.webIdFederationData, userIdentity.invokedBy, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 82 ###"}
{"prompt":"Show me the fields eventVersion, eventCategory, sourceIPAddress, with a limit of 26 ->","completion":" fields @timestamp, eventVersion, eventCategory, sourceIPAddress, | sort @timestamp desc | limit 26 ###"}
{"prompt":"Show me the fields eventCategory, principalId, with a limit of 70 ->","completion":" fields @timestamp, eventCategory, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 70 ###"}
{"prompt":"Show me the fields awsRegion, mfaAuthenticated, userName, filterSet, mfaAuthenticated, invokedBy, userName, eventTime, type, managementEvent, accountId, eventTime, eventTime, readOnly, arn, responseElements, eventName, arn, arn, readOnly, invokedBy, with a limit of 11 ->","completion":" fields @timestamp, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.userName, requestParameters.filterSet, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.userName, eventTime, userIdentity.sessionContext.sessionIssuer.type, managementEvent, userIdentity.sessionContext.sessionIssuer.accountId, eventTime, eventTime, readOnly, userIdentity.arn, responseElements, eventName, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, readOnly, userIdentity.invokedBy, | sort @timestamp desc | limit 11 ###"}
{"prompt":"Show me the fields eventName, vpcSet, webIdFederationData, type, readOnly, type, arn, mfaAuthenticated, managementEvent, userName, managementEvent, principalId, webIdFederationData, readOnly, eventID, invokedBy, eventVersion, sourceIPAddress, with a limit of 32 ->","completion":" fields @timestamp, eventName, requestParameters.vpcSet, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.type, readOnly, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.attributes.mfaAuthenticated, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, readOnly, eventID, userIdentity.invokedBy, eventVersion, sourceIPAddress, | sort @timestamp desc | limit 32 ###"}
{"prompt":"Show me the fields awsRegion, awsRegion, principalId, awsRegion, sourceIPAddress, sourceIPAddress, eventCategory, principalId, eventTime, arn, with a limit of 75 ->","completion":" fields @timestamp, awsRegion, awsRegion, userIdentity.principalId, awsRegion, sourceIPAddress, sourceIPAddress, eventCategory, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 75 ###"}
{"prompt":"Show me the fields principalId, creationDate, principalId, userName, arn, webIdFederationData, readOnly, managementEvent, accountId, type, type, eventType, arn, recipientAccountId, accountId, filterSet, requestID, requestID, responseElements, mfaAuthenticated, requestID, managementEvent, eventType, principalId, eventTime, eventType, arn, with a limit of 62 ->","completion":" fields @timestamp, userIdentity.principalId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, readOnly, managementEvent, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.type, eventType, userIdentity.sessionContext.sessionIssuer.arn, recipientAccountId, userIdentity.accountId, requestParameters.filterSet, requestID, requestID, responseElements, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, managementEvent, eventType, userIdentity.principalId, eventTime, eventType, userIdentity.arn, | sort @timestamp desc | limit 62 ###"}
{"prompt":"Show me the fields filterSet, readOnly, recipientAccountId, eventSource, principalId, accountId, principalId, eventName, webIdFederationData, mfaAuthenticated, vpcSet, eventVersion, vpcSet, eventCategory, accountId, accountId, invokedBy, invokedBy, with a limit of 3 ->","completion":" fields @timestamp, requestParameters.filterSet, readOnly, recipientAccountId, eventSource, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, eventVersion, requestParameters.vpcSet, eventCategory, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, userIdentity.invokedBy, | sort @timestamp desc | limit 3 ###"}
{"prompt":"Show me the fields webIdFederationData, responseElements, webIdFederationData, managementEvent, webIdFederationData, eventSource, userName, type, eventVersion, mfaAuthenticated, eventSource, eventName, eventID, eventTime, vpcSet, eventSource, sourceIPAddress, eventVersion, accountId, eventName, filterSet, userName, eventVersion, invokedBy, arn, requestID, recipientAccountId, filterSet, with a limit of 65 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, responseElements, userIdentity.sessionContext.webIdFederationData, managementEvent, userIdentity.sessionContext.webIdFederationData, eventSource, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.type, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, eventName, eventID, eventTime, requestParameters.vpcSet, eventSource, sourceIPAddress, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, eventName, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.userName, eventVersion, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.arn, requestID, recipientAccountId, requestParameters.filterSet, | sort @timestamp desc | limit 65 ###"}
{"prompt":"Show me the fields eventTime, accountId, creationDate, creationDate, arn, eventCategory, eventID, userAgent, creationDate, sourceIPAddress, principalId, eventTime, managementEvent, requestID, recipientAccountId, webIdFederationData, arn, managementEvent, eventCategory, accountId, arn, accountId, invokedBy, eventType, with a limit of 62 ->","completion":" fields @timestamp, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, eventCategory, eventID, userAgent, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, userIdentity.principalId, eventTime, managementEvent, requestID, recipientAccountId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.arn, managementEvent, eventCategory, userIdentity.accountId, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, eventType, | sort @timestamp desc | limit 62 ###"}
{"prompt":"Show me the fields eventTime, eventCategory, accountId, type, arn, userName, responseElements, webIdFederationData, eventCategory, eventTime, with a limit of 49 ->","completion":" fields @timestamp, eventTime, eventCategory, userIdentity.accountId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.userName, responseElements, userIdentity.sessionContext.webIdFederationData, eventCategory, eventTime, | sort @timestamp desc | limit 49 ###"}
{"prompt":"Show me the fields creationDate, awsRegion, eventID, with a limit of 78 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, awsRegion, eventID, | sort @timestamp desc | limit 78 ###"}
{"prompt":"Show me the fields requestID, responseElements, mfaAuthenticated, recipientAccountId, accountId, filterSet, eventID, sourceIPAddress, eventType, eventTime, webIdFederationData, requestID, arn, arn, eventSource, arn, arn, arn, with a limit of 77 ->","completion":" fields @timestamp, requestID, responseElements, userIdentity.sessionContext.attributes.mfaAuthenticated, recipientAccountId, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.filterSet, eventID, sourceIPAddress, eventType, eventTime, userIdentity.sessionContext.webIdFederationData, requestID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, eventSource, userIdentity.arn, userIdentity.arn, userIdentity.arn, | sort @timestamp desc | limit 77 ###"}
{"prompt":"Show me the fields creationDate, eventVersion, requestID, eventVersion, eventType, principalId, requestID, eventType, eventType, sourceIPAddress, eventTime, filterSet, type, responseElements, requestID, arn, invokedBy, mfaAuthenticated, managementEvent, arn, accountId, with a limit of 33 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, eventVersion, requestID, eventVersion, eventType, userIdentity.principalId, requestID, eventType, eventType, sourceIPAddress, eventTime, requestParameters.filterSet, userIdentity.type, responseElements, requestID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, userIdentity.sessionContext.attributes.mfaAuthenticated, managementEvent, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 33 ###"}
{"prompt":"Show me the fields arn, readOnly, managementEvent, userName, requestID, eventType, managementEvent, creationDate, sourceIPAddress, eventSource, userAgent, eventVersion, responseElements, userName, responseElements, eventName, creationDate, mfaAuthenticated, invokedBy, accountId, with a limit of 62 ->","completion":" fields @timestamp, userIdentity.arn, readOnly, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, requestID, eventType, managementEvent, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, eventSource, userAgent, eventVersion, responseElements, userIdentity.sessionContext.sessionIssuer.userName, responseElements, eventName, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 62 ###"}
{"prompt":"Show me the fields invokedBy, eventID, awsRegion, eventID, responseElements, arn, creationDate, invokedBy, eventType, eventType, vpcSet, with a limit of 70 ->","completion":" fields @timestamp, userIdentity.invokedBy, eventID, awsRegion, eventID, responseElements, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.invokedBy, eventType, eventType, requestParameters.vpcSet, | sort @timestamp desc | limit 70 ###"}
{"prompt":"Show me the fields vpcSet, sourceIPAddress, principalId, recipientAccountId, filterSet, filterSet, creationDate, eventVersion, recipientAccountId, recipientAccountId, requestID, eventID, readOnly, principalId, responseElements, eventVersion, with a limit of 22 ->","completion":" fields @timestamp, requestParameters.vpcSet, sourceIPAddress, userIdentity.principalId, recipientAccountId, requestParameters.filterSet, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, eventVersion, recipientAccountId, recipientAccountId, requestID, eventID, readOnly, userIdentity.principalId, responseElements, eventVersion, | sort @timestamp desc | limit 22 ###"}
{"prompt":"Show me the fields eventSource, principalId, principalId, invokedBy, awsRegion, eventType, responseElements, eventTime, type, principalId, type, awsRegion, webIdFederationData, mfaAuthenticated, requestID, responseElements, readOnly, principalId, requestID, with a limit of 1 ->","completion":" fields @timestamp, eventSource, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.principalId, userIdentity.invokedBy, awsRegion, eventType, responseElements, eventTime, userIdentity.sessionContext.sessionIssuer.type, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.type, awsRegion, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, responseElements, readOnly, userIdentity.principalId, requestID, | sort @timestamp desc | limit 1 ###"}
{"prompt":"Show me the fields principalId, eventSource, filterSet, responseElements, type, requestID, responseElements, readOnly, userAgent, mfaAuthenticated, arn, principalId, eventVersion, accountId, eventName, eventID, with a limit of 90 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, eventSource, requestParameters.filterSet, responseElements, userIdentity.sessionContext.sessionIssuer.type, requestID, responseElements, readOnly, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, eventVersion, userIdentity.accountId, eventName, eventID, | sort @timestamp desc | limit 90 ###"}
{"prompt":"Show me the fields recipientAccountId, responseElements, userName, eventID, type, vpcSet, eventSource, userName, eventVersion, eventName, userAgent, filterSet, eventSource, type, userAgent, responseElements, eventCategory, eventName, eventName, awsRegion, type, responseElements, managementEvent, userName, requestID, arn, eventVersion, vpcSet, with a limit of 21 ->","completion":" fields @timestamp, recipientAccountId, responseElements, userIdentity.sessionContext.sessionIssuer.userName, eventID, userIdentity.type, requestParameters.vpcSet, eventSource, userIdentity.sessionContext.sessionIssuer.userName, eventVersion, eventName, userAgent, requestParameters.filterSet, eventSource, userIdentity.sessionContext.sessionIssuer.type, userAgent, responseElements, eventCategory, eventName, eventName, awsRegion, userIdentity.type, responseElements, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, requestParameters.vpcSet, | sort @timestamp desc | limit 21 ###"}
{"prompt":"Show me the fields webIdFederationData, accountId, userAgent, accountId, accountId, mfaAuthenticated, arn, principalId, arn, vpcSet, requestID, sourceIPAddress, eventType, invokedBy, type, userAgent, eventTime, arn, with a limit of 19 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.accountId, userAgent, userIdentity.accountId, userIdentity.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, requestID, sourceIPAddress, eventType, userIdentity.invokedBy, userIdentity.type, userAgent, eventTime, userIdentity.arn, | sort @timestamp desc | limit 19 ###"}
{"prompt":"Show me the fields requestID, awsRegion, vpcSet, accountId, sourceIPAddress, eventType, invokedBy, webIdFederationData, principalId, vpcSet, with a limit of 53 ->","completion":" fields @timestamp, requestID, awsRegion, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, eventType, userIdentity.invokedBy, userIdentity.sessionContext.webIdFederationData, userIdentity.principalId, requestParameters.vpcSet, | sort @timestamp desc | limit 53 ###"}
{"prompt":"Show me the fields invokedBy, readOnly, userAgent, readOnly, eventType, accountId, eventType, with a limit of 26 ->","completion":" fields @timestamp, userIdentity.invokedBy, readOnly, userAgent, readOnly, eventType, userIdentity.sessionContext.sessionIssuer.accountId, eventType, | sort @timestamp desc | limit 26 ###"}
{"prompt":"Show me the fields creationDate, type, filterSet, responseElements, with a limit of 67 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.type, requestParameters.filterSet, responseElements, | sort @timestamp desc | limit 67 ###"}
{"prompt":"Show me the fields eventID, principalId, type, userName, eventSource, readOnly, accountId, eventTime, eventSource, recipientAccountId, eventType, managementEvent, eventSource, sourceIPAddress, filterSet, creationDate, sourceIPAddress, with a limit of 53 ->","completion":" fields @timestamp, eventID, userIdentity.principalId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.userName, eventSource, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, eventTime, eventSource, recipientAccountId, eventType, managementEvent, eventSource, sourceIPAddress, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, | sort @timestamp desc | limit 53 ###"}
{"prompt":"Show me the fields vpcSet, webIdFederationData, type, mfaAuthenticated, arn, vpcSet, readOnly, responseElements, arn, arn, eventCategory, managementEvent, creationDate, requestID, with a limit of 48 ->","completion":" fields @timestamp, requestParameters.vpcSet, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.arn, requestParameters.vpcSet, readOnly, responseElements, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, managementEvent, userIdentity.sessionContext.attributes.creationDate, requestID, | sort @timestamp desc | limit 48 ###"}
{"prompt":"Show me the fields principalId, arn, principalId, eventVersion, awsRegion, requestID, principalId, type, responseElements, responseElements, awsRegion, principalId, eventName, vpcSet, readOnly, type, creationDate, eventVersion, userAgent, type, webIdFederationData, webIdFederationData, awsRegion, with a limit of 10 ->","completion":" fields @timestamp, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.principalId, eventVersion, awsRegion, requestID, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, responseElements, responseElements, awsRegion, userIdentity.sessionContext.sessionIssuer.principalId, eventName, requestParameters.vpcSet, readOnly, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.creationDate, eventVersion, userAgent, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.webIdFederationData, awsRegion, | sort @timestamp desc | limit 10 ###"}
{"prompt":"Show me the fields principalId, eventName, principalId, arn, webIdFederationData, requestID, sourceIPAddress, invokedBy, requestID, readOnly, invokedBy, accountId, mfaAuthenticated, with a limit of 100 ->","completion":" fields @timestamp, userIdentity.principalId, eventName, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, requestID, sourceIPAddress, userIdentity.invokedBy, requestID, readOnly, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 100 ###"}
{"prompt":"Show me the fields sourceIPAddress, userName, eventSource, userAgent, managementEvent, accountId, recipientAccountId, recipientAccountId, accountId, accountId, userName, principalId, arn, userAgent, principalId, userAgent, accountId, requestID, arn, responseElements, filterSet, webIdFederationData, readOnly, with a limit of 46 ->","completion":" fields @timestamp, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, eventSource, userAgent, managementEvent, userIdentity.sessionContext.sessionIssuer.accountId, recipientAccountId, recipientAccountId, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.arn, userAgent, userIdentity.principalId, userAgent, userIdentity.accountId, requestID, userIdentity.sessionContext.sessionIssuer.arn, responseElements, requestParameters.filterSet, userIdentity.sessionContext.webIdFederationData, readOnly, | sort @timestamp desc | limit 46 ###"}
{"prompt":"Show me the fields filterSet, eventID, invokedBy, sourceIPAddress, invokedBy, managementEvent, with a limit of 76 ->","completion":" fields @timestamp, requestParameters.filterSet, eventID, userIdentity.invokedBy, sourceIPAddress, userIdentity.invokedBy, managementEvent, | sort @timestamp desc | limit 76 ###"}
{"prompt":"Show me the fields eventTime, accountId, principalId, type, eventSource, eventCategory, eventVersion, type, eventName, recipientAccountId, userName, creationDate, sourceIPAddress, requestID, webIdFederationData, type, recipientAccountId, mfaAuthenticated, eventID, webIdFederationData, recipientAccountId, awsRegion, accountId, type, readOnly, eventCategory, managementEvent, eventTime, type, accountId, with a limit of 42 ->","completion":" fields @timestamp, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.type, eventSource, eventCategory, eventVersion, userIdentity.type, eventName, recipientAccountId, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, requestID, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, userIdentity.sessionContext.attributes.mfaAuthenticated, eventID, userIdentity.sessionContext.webIdFederationData, recipientAccountId, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.type, readOnly, eventCategory, managementEvent, eventTime, userIdentity.type, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 42 ###"}
{"prompt":"Show me the fields arn, invokedBy, filterSet, arn, eventID, filterSet, managementEvent, arn, vpcSet, userAgent, filterSet, awsRegion, responseElements, filterSet, eventType, userName, creationDate, arn, eventName, type, managementEvent, with a limit of 76 ->","completion":" fields @timestamp, userIdentity.arn, userIdentity.invokedBy, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.arn, eventID, requestParameters.filterSet, managementEvent, userIdentity.arn, requestParameters.vpcSet, userAgent, requestParameters.filterSet, awsRegion, responseElements, requestParameters.filterSet, eventType, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, eventName, userIdentity.type, managementEvent, | sort @timestamp desc | limit 76 ###"}
{"prompt":"Show me the fields filterSet, requestID, managementEvent, eventTime, awsRegion, arn, awsRegion, eventTime, eventType, eventVersion, webIdFederationData, eventVersion, mfaAuthenticated, filterSet, accountId, creationDate, eventTime, eventID, userName, eventSource, responseElements, requestID, vpcSet, recipientAccountId, creationDate, creationDate, type, sourceIPAddress, with a limit of 87 ->","completion":" fields @timestamp, requestParameters.filterSet, requestID, managementEvent, eventTime, awsRegion, userIdentity.sessionContext.sessionIssuer.arn, awsRegion, eventTime, eventType, eventVersion, userIdentity.sessionContext.webIdFederationData, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.filterSet, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, eventTime, eventID, userIdentity.sessionContext.sessionIssuer.userName, eventSource, responseElements, requestID, requestParameters.vpcSet, recipientAccountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.creationDate, userIdentity.type, sourceIPAddress, | sort @timestamp desc | limit 87 ###"}
{"prompt":"Show me the fields eventID, creationDate, eventName, eventTime, eventVersion, with a limit of 5 ->","completion":" fields @timestamp, eventID, userIdentity.sessionContext.attributes.creationDate, eventName, eventTime, eventVersion, | sort @timestamp desc | limit 5 ###"}
{"prompt":"Show me the fields eventType, principalId, principalId, accountId, principalId, eventID, eventID, principalId, invokedBy, eventVersion, responseElements, vpcSet, creationDate, vpcSet, arn, userAgent, eventID, requestID, type, eventType, vpcSet, type, userName, with a limit of 26 ->","completion":" fields @timestamp, eventType, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.accountId, userIdentity.principalId, eventID, eventID, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, eventVersion, responseElements, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.arn, userAgent, eventID, requestID, userIdentity.type, eventType, requestParameters.vpcSet, userIdentity.type, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 26 ###"}
{"prompt":"Show me the fields managementEvent, eventTime, with a limit of 59 ->","completion":" fields @timestamp, managementEvent, eventTime, | sort @timestamp desc | limit 59 ###"}
{"prompt":"Show me the fields readOnly, userName, type, arn, eventName, webIdFederationData, managementEvent, eventSource, eventSource, eventSource, eventCategory, eventSource, vpcSet, accountId, accountId, with a limit of 52 ->","completion":" fields @timestamp, readOnly, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.type, userIdentity.arn, eventName, userIdentity.sessionContext.webIdFederationData, managementEvent, eventSource, eventSource, eventSource, eventCategory, eventSource, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.accountId, | sort @timestamp desc | limit 52 ###"}
{"prompt":"Show me the fields awsRegion, userAgent, arn, eventID, principalId, arn, eventVersion, arn, eventTime, managementEvent, readOnly, accountId, accountId, responseElements, recipientAccountId, sourceIPAddress, invokedBy, arn, responseElements, managementEvent, principalId, vpcSet, creationDate, with a limit of 56 ->","completion":" fields @timestamp, awsRegion, userAgent, userIdentity.arn, eventID, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.arn, eventVersion, userIdentity.sessionContext.sessionIssuer.arn, eventTime, managementEvent, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.accountId, responseElements, recipientAccountId, sourceIPAddress, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.arn, responseElements, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 56 ###"}
{"prompt":"Show me the fields eventVersion, accountId, webIdFederationData, principalId, arn, readOnly, mfaAuthenticated, eventCategory, arn, vpcSet, responseElements, mfaAuthenticated, principalId, vpcSet, principalId, managementEvent, userName, with a limit of 90 ->","completion":" fields @timestamp, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, readOnly, userIdentity.sessionContext.attributes.mfaAuthenticated, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, responseElements, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.principalId, requestParameters.vpcSet, userIdentity.principalId, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 90 ###"}
{"prompt":"Show me the fields eventSource, recipientAccountId, requestID, creationDate, eventID, eventID, managementEvent, webIdFederationData, eventSource, invokedBy, userName, eventID, principalId, accountId, eventSource, eventCategory, principalId, sourceIPAddress, awsRegion, with a limit of 40 ->","completion":" fields @timestamp, eventSource, recipientAccountId, requestID, userIdentity.sessionContext.attributes.creationDate, eventID, eventID, managementEvent, userIdentity.sessionContext.webIdFederationData, eventSource, userIdentity.invokedBy, userIdentity.sessionContext.sessionIssuer.userName, eventID, userIdentity.principalId, userIdentity.accountId, eventSource, eventCategory, userIdentity.principalId, sourceIPAddress, awsRegion, | sort @timestamp desc | limit 40 ###"}
{"prompt":"Show me the fields filterSet, creationDate, accountId, eventVersion, arn, arn, eventType, requestID, eventCategory, managementEvent, type, managementEvent, type, eventCategory, principalId, userName, eventType, sourceIPAddress, requestID, eventCategory, eventName, responseElements, webIdFederationData, vpcSet, eventCategory, userAgent, with a limit of 3 ->","completion":" fields @timestamp, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, userIdentity.accountId, eventVersion, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, eventType, requestID, eventCategory, managementEvent, userIdentity.type, managementEvent, userIdentity.type, eventCategory, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.userName, eventType, sourceIPAddress, requestID, eventCategory, eventName, responseElements, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, eventCategory, userAgent, | sort @timestamp desc | limit 3 ###"}
{"prompt":"Show me the fields eventName, creationDate, arn, with a limit of 25 ->","completion":" fields @timestamp, eventName, userIdentity.sessionContext.attributes.creationDate, userIdentity.arn, | sort @timestamp desc | limit 25 ###"}
{"prompt":"Show me the fields accountId, eventID, vpcSet, sourceIPAddress, managementEvent, accountId, arn, eventName, webIdFederationData, sourceIPAddress, arn, arn, requestID, awsRegion, sourceIPAddress, requestID, userAgent, filterSet, type, managementEvent, userName, requestID, filterSet, with a limit of 33 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.accountId, eventID, requestParameters.vpcSet, sourceIPAddress, managementEvent, userIdentity.accountId, userIdentity.arn, eventName, userIdentity.sessionContext.webIdFederationData, sourceIPAddress, userIdentity.arn, userIdentity.arn, requestID, awsRegion, sourceIPAddress, requestID, userAgent, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, requestID, requestParameters.filterSet, | sort @timestamp desc | limit 33 ###"}
{"prompt":"Show me the fields arn, eventID, arn, sourceIPAddress, webIdFederationData, eventName, vpcSet, creationDate, userName, requestID, eventCategory, creationDate, recipientAccountId, arn, arn, readOnly, awsRegion, responseElements, vpcSet, creationDate, recipientAccountId, filterSet, managementEvent, eventName, userName, accountId, with a limit of 28 ->","completion":" fields @timestamp, userIdentity.arn, eventID, userIdentity.sessionContext.sessionIssuer.arn, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, eventName, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.userName, requestID, eventCategory, userIdentity.sessionContext.attributes.creationDate, recipientAccountId, userIdentity.arn, userIdentity.arn, readOnly, awsRegion, responseElements, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, recipientAccountId, requestParameters.filterSet, managementEvent, eventName, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.accountId, | sort @timestamp desc | limit 28 ###"}
{"prompt":"Show me the fields filterSet, eventCategory, readOnly, filterSet, arn, eventType, mfaAuthenticated, vpcSet, vpcSet, eventVersion, with a limit of 38 ->","completion":" fields @timestamp, requestParameters.filterSet, eventCategory, readOnly, requestParameters.filterSet, userIdentity.arn, eventType, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, requestParameters.vpcSet, eventVersion, | sort @timestamp desc | limit 38 ###"}
{"prompt":"Show me the fields arn, vpcSet, mfaAuthenticated, recipientAccountId, eventID, type, responseElements, accountId, requestID, filterSet, managementEvent, eventVersion, awsRegion, userAgent, arn, filterSet, principalId, recipientAccountId, recipientAccountId, awsRegion, awsRegion, creationDate, with a limit of 83 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, userIdentity.sessionContext.attributes.mfaAuthenticated, recipientAccountId, eventID, userIdentity.type, responseElements, userIdentity.accountId, requestID, requestParameters.filterSet, managementEvent, eventVersion, awsRegion, userAgent, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, recipientAccountId, recipientAccountId, awsRegion, awsRegion, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 83 ###"}
{"prompt":"Show me the fields principalId, filterSet, filterSet, eventSource, eventID, webIdFederationData, readOnly, requestID, type, eventVersion, with a limit of 52 ->","completion":" fields @timestamp, userIdentity.principalId, requestParameters.filterSet, requestParameters.filterSet, eventSource, eventID, userIdentity.sessionContext.webIdFederationData, readOnly, requestID, userIdentity.type, eventVersion, | sort @timestamp desc | limit 52 ###"}
{"prompt":"Show me the fields mfaAuthenticated, sourceIPAddress, userName, userAgent, userAgent, sourceIPAddress, eventVersion, sourceIPAddress, managementEvent, eventType, accountId, filterSet, accountId, sourceIPAddress, arn, accountId, arn, arn, webIdFederationData, filterSet, arn, type, awsRegion, webIdFederationData, accountId, arn, eventSource, invokedBy, eventSource, eventSource, with a limit of 86 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, userAgent, userAgent, sourceIPAddress, eventVersion, sourceIPAddress, managementEvent, eventType, userIdentity.accountId, requestParameters.filterSet, userIdentity.accountId, sourceIPAddress, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, requestParameters.filterSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, awsRegion, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, eventSource, userIdentity.invokedBy, eventSource, eventSource, | sort @timestamp desc | limit 86 ###"}
{"prompt":"Show me the fields recipientAccountId, type, arn, type, type, webIdFederationData, webIdFederationData, mfaAuthenticated, creationDate, sourceIPAddress, eventCategory, type, responseElements, recipientAccountId, eventID, filterSet, principalId, eventType, invokedBy, principalId, readOnly, arn, type, recipientAccountId, accountId, type, eventCategory, arn, accountId, eventVersion, with a limit of 11 ->","completion":" fields @timestamp, recipientAccountId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, eventCategory, userIdentity.type, responseElements, recipientAccountId, eventID, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, eventType, userIdentity.invokedBy, userIdentity.principalId, readOnly, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, recipientAccountId, userIdentity.accountId, userIdentity.type, eventCategory, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.accountId, eventVersion, | sort @timestamp desc | limit 11 ###"}
{"prompt":"Show me the fields arn, webIdFederationData, readOnly, eventSource, filterSet, managementEvent, eventID, eventTime, accountId, eventID, webIdFederationData, awsRegion, type, principalId, readOnly, vpcSet, eventCategory, vpcSet, recipientAccountId, managementEvent, eventVersion, principalId, eventVersion, userName, eventType, mfaAuthenticated, accountId, principalId, accountId, with a limit of 50 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, readOnly, eventSource, requestParameters.filterSet, managementEvent, eventID, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, eventID, userIdentity.sessionContext.webIdFederationData, awsRegion, userIdentity.type, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, requestParameters.vpcSet, eventCategory, requestParameters.vpcSet, recipientAccountId, managementEvent, eventVersion, userIdentity.principalId, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, eventType, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.principalId, userIdentity.accountId, | sort @timestamp desc | limit 50 ###"}
{"prompt":"Show me the fields filterSet, invokedBy, mfaAuthenticated, sourceIPAddress, mfaAuthenticated, eventID, eventSource, awsRegion, eventType, userName, invokedBy, principalId, recipientAccountId, eventTime, awsRegion, type, arn, invokedBy, eventName, userName, eventID, readOnly, eventName, arn, eventVersion, eventID, with a limit of 91 ->","completion":" fields @timestamp, requestParameters.filterSet, userIdentity.invokedBy, userIdentity.sessionContext.attributes.mfaAuthenticated, sourceIPAddress, userIdentity.sessionContext.attributes.mfaAuthenticated, eventID, eventSource, awsRegion, eventType, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.invokedBy, userIdentity.principalId, recipientAccountId, eventTime, awsRegion, userIdentity.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.invokedBy, eventName, userIdentity.sessionContext.sessionIssuer.userName, eventID, readOnly, eventName, userIdentity.arn, eventVersion, eventID, | sort @timestamp desc | limit 91 ###"}
{"prompt":"Show me the fields accountId, creationDate, type, eventType, eventName, eventName, eventID, eventCategory, eventVersion, creationDate, eventVersion, recipientAccountId, eventCategory, mfaAuthenticated, accountId, requestID, eventID, filterSet, arn, requestID, eventCategory, filterSet, vpcSet, arn, eventVersion, eventType, creationDate, mfaAuthenticated, with a limit of 73 ->","completion":" fields @timestamp, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.type, eventType, eventName, eventName, eventID, eventCategory, eventVersion, userIdentity.sessionContext.attributes.creationDate, eventVersion, recipientAccountId, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.accountId, requestID, eventID, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.arn, requestID, eventCategory, requestParameters.filterSet, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, eventType, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 73 ###"}
{"prompt":"Show me the fields eventCategory, eventName, eventName, accountId, accountId, eventVersion, arn, awsRegion, userName, accountId, creationDate, invokedBy, principalId, eventType, requestID, arn, eventVersion, awsRegion, filterSet, eventTime, principalId, arn, sourceIPAddress, filterSet, eventVersion, arn, userName, mfaAuthenticated, with a limit of 31 ->","completion":" fields @timestamp, eventCategory, eventName, eventName, userIdentity.accountId, userIdentity.accountId, eventVersion, userIdentity.arn, awsRegion, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.accountId, userIdentity.sessionContext.attributes.creationDate, userIdentity.invokedBy, userIdentity.principalId, eventType, requestID, userIdentity.arn, eventVersion, awsRegion, requestParameters.filterSet, eventTime, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, sourceIPAddress, requestParameters.filterSet, eventVersion, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 31 ###"}
{"prompt":"Show me the fields invokedBy, vpcSet, eventType, webIdFederationData, requestID, creationDate, eventCategory, eventTime, creationDate, responseElements, eventType, readOnly, userName, eventSource, responseElements, userName, awsRegion, eventVersion, awsRegion, vpcSet, with a limit of 37 ->","completion":" fields @timestamp, userIdentity.invokedBy, requestParameters.vpcSet, eventType, userIdentity.sessionContext.webIdFederationData, requestID, userIdentity.sessionContext.attributes.creationDate, eventCategory, eventTime, userIdentity.sessionContext.attributes.creationDate, responseElements, eventType, readOnly, userIdentity.sessionContext.sessionIssuer.userName, eventSource, responseElements, userIdentity.sessionContext.sessionIssuer.userName, awsRegion, eventVersion, awsRegion, requestParameters.vpcSet, | sort @timestamp desc | limit 37 ###"}
{"prompt":"Show me the fields principalId, vpcSet, creationDate, creationDate, principalId, eventTime, requestID, eventVersion, arn, principalId, type, accountId, managementEvent, eventCategory, accountId, eventSource, recipientAccountId, readOnly, eventID, eventCategory, with a limit of 81 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, requestID, eventVersion, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.principalId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.accountId, managementEvent, eventCategory, userIdentity.accountId, eventSource, recipientAccountId, readOnly, eventID, eventCategory, | sort @timestamp desc | limit 81 ###"}
{"prompt":"Show me the fields eventSource, eventVersion, sourceIPAddress, eventCategory, eventType, userAgent, requestID, webIdFederationData, eventSource, eventCategory, eventID, webIdFederationData, mfaAuthenticated, userAgent, awsRegion, eventName, arn, with a limit of 51 ->","completion":" fields @timestamp, eventSource, eventVersion, sourceIPAddress, eventCategory, eventType, userAgent, requestID, userIdentity.sessionContext.webIdFederationData, eventSource, eventCategory, eventID, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, userAgent, awsRegion, eventName, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 51 ###"}
{"prompt":"Show me the fields eventType, eventVersion, filterSet, eventTime, filterSet, eventCategory, eventVersion, vpcSet, mfaAuthenticated, mfaAuthenticated, requestID, principalId, invokedBy, mfaAuthenticated, awsRegion, managementEvent, managementEvent, eventType, managementEvent, userName, responseElements, arn, with a limit of 11 ->","completion":" fields @timestamp, eventType, eventVersion, requestParameters.filterSet, eventTime, requestParameters.filterSet, eventCategory, eventVersion, requestParameters.vpcSet, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, userIdentity.sessionContext.attributes.mfaAuthenticated, awsRegion, managementEvent, managementEvent, eventType, managementEvent, userIdentity.sessionContext.sessionIssuer.userName, responseElements, userIdentity.arn, | sort @timestamp desc | limit 11 ###"}
{"prompt":"Show me the fields responseElements, accountId, userAgent, principalId, type, eventCategory, mfaAuthenticated, vpcSet, mfaAuthenticated, eventType, eventID, vpcSet, eventType, with a limit of 17 ->","completion":" fields @timestamp, responseElements, userIdentity.accountId, userAgent, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, userIdentity.sessionContext.attributes.mfaAuthenticated, eventType, eventID, requestParameters.vpcSet, eventType, | sort @timestamp desc | limit 17 ###"}
{"prompt":"Show me the fields principalId, requestID, filterSet, type, arn, eventType, eventVersion, invokedBy, type, filterSet, requestID, eventVersion, awsRegion, arn, requestID, eventSource, filterSet, eventSource, arn, eventSource, arn, recipientAccountId, userAgent, sourceIPAddress, awsRegion, requestID, type, type, with a limit of 61 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, requestID, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.arn, eventType, eventVersion, userIdentity.invokedBy, userIdentity.type, requestParameters.filterSet, requestID, eventVersion, awsRegion, userIdentity.sessionContext.sessionIssuer.arn, requestID, eventSource, requestParameters.filterSet, eventSource, userIdentity.sessionContext.sessionIssuer.arn, eventSource, userIdentity.sessionContext.sessionIssuer.arn, recipientAccountId, userAgent, sourceIPAddress, awsRegion, requestID, userIdentity.type, userIdentity.sessionContext.sessionIssuer.type, | sort @timestamp desc | limit 61 ###"}
{"prompt":"Show me the fields arn, vpcSet, eventID, accountId, mfaAuthenticated, readOnly, type, eventTime, eventID, filterSet, vpcSet, arn, managementEvent, accountId, eventID, eventID, accountId, userAgent, arn, type, with a limit of 9 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.vpcSet, eventID, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, readOnly, userIdentity.type, eventTime, eventID, requestParameters.filterSet, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.arn, managementEvent, userIdentity.accountId, eventID, eventID, userIdentity.sessionContext.sessionIssuer.accountId, userAgent, userIdentity.arn, userIdentity.type, | sort @timestamp desc | limit 9 ###"}
{"prompt":"Show me the fields creationDate, accountId, sourceIPAddress, eventID, eventTime, eventVersion, type, webIdFederationData, eventType, accountId, invokedBy, requestID, eventName, eventType, principalId, webIdFederationData, accountId, webIdFederationData, managementEvent, awsRegion, recipientAccountId, invokedBy, recipientAccountId, eventID, readOnly, creationDate, requestID, accountId, with a limit of 20 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, eventID, eventTime, eventVersion, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, eventType, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, requestID, eventName, eventType, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, managementEvent, awsRegion, recipientAccountId, userIdentity.invokedBy, recipientAccountId, eventID, readOnly, userIdentity.sessionContext.attributes.creationDate, requestID, userIdentity.accountId, | sort @timestamp desc | limit 20 ###"}
{"prompt":"Show me the fields creationDate, userName, arn, filterSet, arn, webIdFederationData, type, eventType, eventVersion, eventID, eventID, arn, creationDate, creationDate, sourceIPAddress, principalId, eventName, principalId, eventCategory, creationDate, managementEvent, invokedBy, eventName, with a limit of 5 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, userIdentity.arn, userIdentity.sessionContext.webIdFederationData, userIdentity.type, eventType, eventVersion, eventID, eventID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.principalId, eventName, userIdentity.sessionContext.sessionIssuer.principalId, eventCategory, userIdentity.sessionContext.attributes.creationDate, managementEvent, userIdentity.invokedBy, eventName, | sort @timestamp desc | limit 5 ###"}
{"prompt":"Show me the fields sourceIPAddress, type, mfaAuthenticated, eventType, userAgent, eventType, type, readOnly, managementEvent, principalId, webIdFederationData, creationDate, userName, recipientAccountId, awsRegion, eventType, awsRegion, mfaAuthenticated, arn, arn, accountId, type, responseElements, userName, with a limit of 100 ->","completion":" fields @timestamp, sourceIPAddress, userIdentity.type, userIdentity.sessionContext.attributes.mfaAuthenticated, eventType, userAgent, eventType, userIdentity.sessionContext.sessionIssuer.type, readOnly, managementEvent, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.userName, recipientAccountId, awsRegion, eventType, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.type, responseElements, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 100 ###"}
{"prompt":"Show me the fields principalId, arn, awsRegion, eventID, eventID, mfaAuthenticated, accountId, type, responseElements, vpcSet, sourceIPAddress, userName, invokedBy, arn, accountId, readOnly, with a limit of 8 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, awsRegion, eventID, eventID, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.type, responseElements, requestParameters.vpcSet, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.invokedBy, userIdentity.arn, userIdentity.accountId, readOnly, | sort @timestamp desc | limit 8 ###"}
{"prompt":"Show me the fields eventTime, accountId, accountId, webIdFederationData, managementEvent, filterSet, principalId, vpcSet, filterSet, with a limit of 99 ->","completion":" fields @timestamp, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.webIdFederationData, managementEvent, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.vpcSet, requestParameters.filterSet, | sort @timestamp desc | limit 99 ###"}
{"prompt":"Show me the fields eventCategory, recipientAccountId, arn, accountId, accountId, responseElements, userAgent, readOnly, eventVersion, eventVersion, recipientAccountId, filterSet, type, userName, creationDate, eventSource, requestID, eventID, eventVersion, creationDate, userName, sourceIPAddress, type, userName, arn, userName, eventVersion, with a limit of 27 ->","completion":" fields @timestamp, eventCategory, recipientAccountId, userIdentity.arn, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.accountId, responseElements, userAgent, readOnly, eventVersion, eventVersion, recipientAccountId, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, eventSource, requestID, eventID, eventVersion, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.userName, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.userName, eventVersion, | sort @timestamp desc | limit 27 ###"}
{"prompt":"Show me the fields awsRegion, readOnly, userAgent, arn, filterSet, filterSet, arn, recipientAccountId, awsRegion, type, filterSet, eventName, accountId, eventCategory, sourceIPAddress, eventCategory, accountId, with a limit of 60 ->","completion":" fields @timestamp, awsRegion, readOnly, userAgent, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.arn, recipientAccountId, awsRegion, userIdentity.type, requestParameters.filterSet, eventName, userIdentity.sessionContext.sessionIssuer.accountId, eventCategory, sourceIPAddress, eventCategory, userIdentity.accountId, | sort @timestamp desc | limit 60 ###"}
{"prompt":"Show me the fields accountId, invokedBy, with a limit of 88 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.invokedBy, | sort @timestamp desc | limit 88 ###"}
{"prompt":"Show me the fields webIdFederationData, eventCategory, userName, sourceIPAddress, filterSet, principalId, vpcSet, arn, awsRegion, eventTime, eventID, eventType, eventSource, awsRegion, mfaAuthenticated, eventSource, responseElements, with a limit of 80 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, eventCategory, userIdentity.sessionContext.sessionIssuer.userName, sourceIPAddress, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, requestParameters.vpcSet, userIdentity.sessionContext.sessionIssuer.arn, awsRegion, eventTime, eventID, eventType, eventSource, awsRegion, userIdentity.sessionContext.attributes.mfaAuthenticated, eventSource, responseElements, | sort @timestamp desc | limit 80 ###"}
{"prompt":"Show me the fields eventTime, principalId, mfaAuthenticated, requestID, managementEvent, recipientAccountId, eventType, recipientAccountId, eventType, readOnly, eventType, creationDate, eventCategory, eventVersion, type, principalId, eventID, userName, requestID, mfaAuthenticated, webIdFederationData, readOnly, with a limit of 58 ->","completion":" fields @timestamp, eventTime, userIdentity.principalId, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, managementEvent, recipientAccountId, eventType, recipientAccountId, eventType, readOnly, eventType, userIdentity.sessionContext.attributes.creationDate, eventCategory, eventVersion, userIdentity.type, userIdentity.principalId, eventID, userIdentity.sessionContext.sessionIssuer.userName, requestID, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.webIdFederationData, readOnly, | sort @timestamp desc | limit 58 ###"}
{"prompt":"Show me the fields userName, readOnly, accountId, arn, readOnly, invokedBy, eventSource, vpcSet, eventCategory, recipientAccountId, principalId, eventCategory, responseElements, sourceIPAddress, readOnly, readOnly, filterSet, arn, arn, with a limit of 69 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.userName, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.arn, readOnly, userIdentity.invokedBy, eventSource, requestParameters.vpcSet, eventCategory, recipientAccountId, userIdentity.principalId, eventCategory, responseElements, sourceIPAddress, readOnly, readOnly, requestParameters.filterSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, | sort @timestamp desc | limit 69 ###"}
{"prompt":"Show me the fields arn, eventTime, mfaAuthenticated, requestID, awsRegion, eventCategory, requestID, principalId, principalId, eventVersion, mfaAuthenticated, with a limit of 56 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, eventTime, userIdentity.sessionContext.attributes.mfaAuthenticated, requestID, awsRegion, eventCategory, requestID, userIdentity.principalId, userIdentity.principalId, eventVersion, userIdentity.sessionContext.attributes.mfaAuthenticated, | sort @timestamp desc | limit 56 ###"}
{"prompt":"Show me the fields recipientAccountId, eventSource, with a limit of 13 ->","completion":" fields @timestamp, recipientAccountId, eventSource, | sort @timestamp desc | limit 13 ###"}
{"prompt":"Show me the fields mfaAuthenticated, userName, responseElements, accountId, recipientAccountId, accountId, eventTime, principalId, awsRegion, principalId, type, eventCategory, managementEvent, recipientAccountId, principalId, eventTime, invokedBy, type, eventType, webIdFederationData, responseElements, vpcSet, managementEvent, eventVersion, accountId, responseElements, principalId, webIdFederationData, mfaAuthenticated, eventType, with a limit of 28 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.sessionContext.sessionIssuer.userName, responseElements, userIdentity.sessionContext.sessionIssuer.accountId, recipientAccountId, userIdentity.accountId, eventTime, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, userIdentity.principalId, userIdentity.type, eventCategory, managementEvent, recipientAccountId, userIdentity.sessionContext.sessionIssuer.principalId, eventTime, userIdentity.invokedBy, userIdentity.type, eventType, userIdentity.sessionContext.webIdFederationData, responseElements, requestParameters.vpcSet, managementEvent, eventVersion, userIdentity.accountId, responseElements, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, eventType, | sort @timestamp desc | limit 28 ###"}
{"prompt":"Show me the fields accountId, managementEvent, eventTime, eventSource, creationDate, requestID, vpcSet, vpcSet, eventSource, eventName, eventID, readOnly, arn, userName, webIdFederationData, arn, vpcSet, with a limit of 77 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.accountId, managementEvent, eventTime, eventSource, userIdentity.sessionContext.attributes.creationDate, requestID, requestParameters.vpcSet, requestParameters.vpcSet, eventSource, eventName, eventID, readOnly, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.webIdFederationData, userIdentity.arn, requestParameters.vpcSet, | sort @timestamp desc | limit 77 ###"}
{"prompt":"Show me the fields eventVersion, vpcSet, type, eventTime, eventTime, recipientAccountId, mfaAuthenticated, recipientAccountId, type, arn, accountId, requestID, requestID, eventVersion, sourceIPAddress, eventSource, eventCategory, type, readOnly, eventCategory, webIdFederationData, eventName, eventName, arn, with a limit of 84 ->","completion":" fields @timestamp, eventVersion, requestParameters.vpcSet, userIdentity.type, eventTime, eventTime, recipientAccountId, userIdentity.sessionContext.attributes.mfaAuthenticated, recipientAccountId, userIdentity.type, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.accountId, requestID, requestID, eventVersion, sourceIPAddress, eventSource, eventCategory, userIdentity.sessionContext.sessionIssuer.type, readOnly, eventCategory, userIdentity.sessionContext.webIdFederationData, eventName, eventName, userIdentity.arn, | sort @timestamp desc | limit 84 ###"}
{"prompt":"Show me the fields type, eventVersion, type, type, eventTime, accountId, awsRegion, filterSet, readOnly, eventName, principalId, eventType, userAgent, eventName, creationDate, eventSource, type, principalId, type, webIdFederationData, eventTime, filterSet, type, with a limit of 26 ->","completion":" fields @timestamp, userIdentity.type, eventVersion, userIdentity.sessionContext.sessionIssuer.type, userIdentity.type, eventTime, userIdentity.accountId, awsRegion, requestParameters.filterSet, readOnly, eventName, userIdentity.sessionContext.sessionIssuer.principalId, eventType, userAgent, eventName, userIdentity.sessionContext.attributes.creationDate, eventSource, userIdentity.type, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, userIdentity.sessionContext.webIdFederationData, eventTime, requestParameters.filterSet, userIdentity.type, | sort @timestamp desc | limit 26 ###"}
{"prompt":"Show me the fields requestID, managementEvent, requestID, eventType, managementEvent, with a limit of 25 ->","completion":" fields @timestamp, requestID, managementEvent, requestID, eventType, managementEvent, | sort @timestamp desc | limit 25 ###"}
{"prompt":"Show me the fields arn, filterSet, eventCategory, eventTime, type, managementEvent, type, eventName, userName, userAgent, responseElements, accountId, arn, accountId, userAgent, type, eventVersion, userName, type, with a limit of 20 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, eventCategory, eventTime, userIdentity.sessionContext.sessionIssuer.type, managementEvent, userIdentity.sessionContext.sessionIssuer.type, eventName, userIdentity.sessionContext.sessionIssuer.userName, userAgent, responseElements, userIdentity.accountId, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.accountId, userAgent, userIdentity.sessionContext.sessionIssuer.type, eventVersion, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.type, | sort @timestamp desc | limit 20 ###"}
{"prompt":"Show me the fields filterSet, recipientAccountId, accountId, eventVersion, eventVersion, eventTime, with a limit of 47 ->","completion":" fields @timestamp, requestParameters.filterSet, recipientAccountId, userIdentity.sessionContext.sessionIssuer.accountId, eventVersion, eventVersion, eventTime, | sort @timestamp desc | limit 47 ###"}
{"prompt":"Show me the fields recipientAccountId, eventSource, type, accountId, type, accountId, vpcSet, eventID, arn, userName, responseElements, principalId, awsRegion, principalId, requestID, eventName, with a limit of 46 ->","completion":" fields @timestamp, recipientAccountId, eventSource, userIdentity.sessionContext.sessionIssuer.type, userIdentity.accountId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.vpcSet, eventID, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.userName, responseElements, userIdentity.principalId, awsRegion, userIdentity.sessionContext.sessionIssuer.principalId, requestID, eventName, | sort @timestamp desc | limit 46 ###"}
{"prompt":"Show me the fields arn, webIdFederationData, webIdFederationData, responseElements, arn, creationDate, with a limit of 86 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.webIdFederationData, responseElements, userIdentity.arn, userIdentity.sessionContext.attributes.creationDate, | sort @timestamp desc | limit 86 ###"}
{"prompt":"Show me the fields managementEvent, eventType, awsRegion, principalId, type, eventID, readOnly, arn, filterSet, type, with a limit of 58 ->","completion":" fields @timestamp, managementEvent, eventType, awsRegion, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.type, eventID, readOnly, userIdentity.arn, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, | sort @timestamp desc | limit 58 ###"}
{"prompt":"Show me the fields eventID, filterSet, eventID, readOnly, eventSource, recipientAccountId, userAgent, accountId, principalId, accountId, requestID, creationDate, requestID, userAgent, arn, arn, arn, eventID, managementEvent, type, accountId, awsRegion, userAgent, sourceIPAddress, webIdFederationData, eventTime, awsRegion, with a limit of 1 ->","completion":" fields @timestamp, eventID, requestParameters.filterSet, eventID, readOnly, eventSource, recipientAccountId, userAgent, userIdentity.accountId, userIdentity.principalId, userIdentity.accountId, requestID, userIdentity.sessionContext.attributes.creationDate, requestID, userAgent, userIdentity.arn, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, eventID, managementEvent, userIdentity.sessionContext.sessionIssuer.type, userIdentity.accountId, awsRegion, userAgent, sourceIPAddress, userIdentity.sessionContext.webIdFederationData, eventTime, awsRegion, | sort @timestamp desc | limit 1 ###"}
{"prompt":"Show me the fields invokedBy, userAgent, mfaAuthenticated, vpcSet, with a limit of 46 ->","completion":" fields @timestamp, userIdentity.invokedBy, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, | sort @timestamp desc | limit 46 ###"}
{"prompt":"Show me the fields managementEvent, requestID, creationDate, responseElements, type, filterSet, readOnly, requestID, readOnly, eventTime, accountId, with a limit of 2 ->","completion":" fields @timestamp, managementEvent, requestID, userIdentity.sessionContext.attributes.creationDate, responseElements, userIdentity.sessionContext.sessionIssuer.type, requestParameters.filterSet, readOnly, requestID, readOnly, eventTime, userIdentity.accountId, | sort @timestamp desc | limit 2 ###"}
{"prompt":"Show me the fields principalId, invokedBy, awsRegion, with a limit of 2 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, awsRegion, | sort @timestamp desc | limit 2 ###"}
{"prompt":"Show me the fields invokedBy, readOnly, vpcSet, vpcSet, recipientAccountId, type, userAgent, arn, creationDate, type, sourceIPAddress, responseElements, sourceIPAddress, filterSet, arn, eventVersion, webIdFederationData, principalId, eventVersion, arn, with a limit of 46 ->","completion":" fields @timestamp, userIdentity.invokedBy, readOnly, requestParameters.vpcSet, requestParameters.vpcSet, recipientAccountId, userIdentity.sessionContext.sessionIssuer.type, userAgent, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.attributes.creationDate, userIdentity.type, sourceIPAddress, responseElements, sourceIPAddress, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.arn, eventVersion, userIdentity.sessionContext.webIdFederationData, userIdentity.principalId, eventVersion, userIdentity.arn, | sort @timestamp desc | limit 46 ###"}
{"prompt":"Show me the fields sourceIPAddress, managementEvent, eventVersion, readOnly, accountId, responseElements, webIdFederationData, filterSet, userAgent, eventVersion, accountId, eventVersion, creationDate, principalId, readOnly, with a limit of 6 ->","completion":" fields @timestamp, sourceIPAddress, managementEvent, eventVersion, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, responseElements, userIdentity.sessionContext.webIdFederationData, requestParameters.filterSet, userAgent, eventVersion, userIdentity.accountId, eventVersion, userIdentity.sessionContext.attributes.creationDate, userIdentity.principalId, readOnly, | sort @timestamp desc | limit 6 ###"}
{"prompt":"Show me the fields accountId, awsRegion, accountId, principalId, principalId, accountId, eventID, principalId, with a limit of 16 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.accountId, awsRegion, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.accountId, eventID, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 16 ###"}
{"prompt":"Show me the fields type, managementEvent, invokedBy, arn, mfaAuthenticated, recipientAccountId, principalId, with a limit of 39 ->","completion":" fields @timestamp, userIdentity.type, managementEvent, userIdentity.invokedBy, userIdentity.arn, userIdentity.sessionContext.attributes.mfaAuthenticated, recipientAccountId, userIdentity.principalId, | sort @timestamp desc | limit 39 ###"}
{"prompt":"Show me the fields invokedBy, awsRegion, readOnly, eventTime, vpcSet, eventTime, requestID, type, responseElements, with a limit of 85 ->","completion":" fields @timestamp, userIdentity.invokedBy, awsRegion, readOnly, eventTime, requestParameters.vpcSet, eventTime, requestID, userIdentity.type, responseElements, | sort @timestamp desc | limit 85 ###"}
{"prompt":"Show me the fields invokedBy, vpcSet, creationDate, sourceIPAddress, vpcSet, managementEvent, with a limit of 83 ->","completion":" fields @timestamp, userIdentity.invokedBy, requestParameters.vpcSet, userIdentity.sessionContext.attributes.creationDate, sourceIPAddress, requestParameters.vpcSet, managementEvent, | sort @timestamp desc | limit 83 ###"}
{"prompt":"Show me the fields webIdFederationData, userAgent, vpcSet, principalId, userAgent, webIdFederationData, type, userAgent, awsRegion, webIdFederationData, type, principalId, arn, userAgent, arn, type, eventName, accountId, sourceIPAddress, eventType, type, mfaAuthenticated, eventName, accountId, sourceIPAddress, principalId, with a limit of 17 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userAgent, requestParameters.vpcSet, userIdentity.principalId, userAgent, userIdentity.sessionContext.webIdFederationData, userIdentity.type, userAgent, awsRegion, userIdentity.sessionContext.webIdFederationData, userIdentity.type, userIdentity.principalId, userIdentity.sessionContext.sessionIssuer.arn, userAgent, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.type, eventName, userIdentity.accountId, sourceIPAddress, eventType, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, userIdentity.sessionContext.sessionIssuer.accountId, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 17 ###"}
{"prompt":"Show me the fields eventTime, accountId, eventVersion, accountId, eventCategory, managementEvent, eventCategory, eventType, eventID, userName, creationDate, eventID, type, eventSource, readOnly, accountId, vpcSet, webIdFederationData, managementEvent, eventName, eventName, with a limit of 22 ->","completion":" fields @timestamp, eventTime, userIdentity.sessionContext.sessionIssuer.accountId, eventVersion, userIdentity.sessionContext.sessionIssuer.accountId, eventCategory, managementEvent, eventCategory, eventType, eventID, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.attributes.creationDate, eventID, userIdentity.sessionContext.sessionIssuer.type, eventSource, readOnly, userIdentity.sessionContext.sessionIssuer.accountId, requestParameters.vpcSet, userIdentity.sessionContext.webIdFederationData, managementEvent, eventName, eventName, | sort @timestamp desc | limit 22 ###"}
{"prompt":"Show me the fields arn, arn, type, eventSource, with a limit of 16 ->","completion":" fields @timestamp, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.type, eventSource, | sort @timestamp desc | limit 16 ###"}
{"prompt":"Show me the fields managementEvent, invokedBy, eventName, creationDate, eventType, webIdFederationData, arn, accountId, eventType, filterSet, mfaAuthenticated, eventType, eventID, userAgent, eventType, sourceIPAddress, vpcSet, sourceIPAddress, userName, principalId, eventCategory, accountId, eventCategory, responseElements, with a limit of 75 ->","completion":" fields @timestamp, managementEvent, userIdentity.invokedBy, eventName, userIdentity.sessionContext.attributes.creationDate, eventType, userIdentity.sessionContext.webIdFederationData, userIdentity.arn, userIdentity.accountId, eventType, requestParameters.filterSet, userIdentity.sessionContext.attributes.mfaAuthenticated, eventType, eventID, userAgent, eventType, sourceIPAddress, requestParameters.vpcSet, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.principalId, eventCategory, userIdentity.accountId, eventCategory, responseElements, | sort @timestamp desc | limit 75 ###"}
{"prompt":"Show me the fields eventSource, eventSource, eventSource, eventID, userName, eventName, sourceIPAddress, userName, responseElements, principalId, invokedBy, arn, with a limit of 30 ->","completion":" fields @timestamp, eventSource, eventSource, eventSource, eventID, userIdentity.sessionContext.sessionIssuer.userName, eventName, sourceIPAddress, userIdentity.sessionContext.sessionIssuer.userName, responseElements, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, userIdentity.arn, | sort @timestamp desc | limit 30 ###"}
{"prompt":"Show me the fields eventVersion, principalId, webIdFederationData, principalId, filterSet, principalId, awsRegion, invokedBy, type, type, principalId, principalId, type, principalId, requestID, eventType, eventSource, principalId, eventCategory, mfaAuthenticated, invokedBy, accountId, with a limit of 94 ->","completion":" fields @timestamp, eventVersion, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.webIdFederationData, userIdentity.principalId, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.principalId, awsRegion, userIdentity.invokedBy, userIdentity.type, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.principalId, requestID, eventType, eventSource, userIdentity.principalId, eventCategory, userIdentity.sessionContext.attributes.mfaAuthenticated, userIdentity.invokedBy, userIdentity.accountId, | sort @timestamp desc | limit 94 ###"}
{"prompt":"Show me the fields mfaAuthenticated, vpcSet, arn, accountId, mfaAuthenticated, awsRegion, eventSource, type, webIdFederationData, readOnly, webIdFederationData, arn, webIdFederationData, eventTime, managementEvent, eventName, userAgent, with a limit of 59 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.attributes.mfaAuthenticated, awsRegion, eventSource, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, readOnly, userIdentity.sessionContext.webIdFederationData, userIdentity.arn, userIdentity.sessionContext.webIdFederationData, eventTime, managementEvent, eventName, userAgent, | sort @timestamp desc | limit 59 ###"}
{"prompt":"Show me the fields principalId, arn, userAgent, creationDate, filterSet, readOnly, eventSource, creationDate, recipientAccountId, requestID, creationDate, principalId, eventSource, webIdFederationData, accountId, awsRegion, arn, userAgent, accountId, recipientAccountId, readOnly, readOnly, webIdFederationData, eventName, eventName, invokedBy, eventTime, with a limit of 98 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.arn, userAgent, userIdentity.sessionContext.attributes.creationDate, requestParameters.filterSet, readOnly, eventSource, userIdentity.sessionContext.attributes.creationDate, recipientAccountId, requestID, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.principalId, eventSource, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.accountId, awsRegion, userIdentity.sessionContext.sessionIssuer.arn, userAgent, userIdentity.sessionContext.sessionIssuer.accountId, recipientAccountId, readOnly, readOnly, userIdentity.sessionContext.webIdFederationData, eventName, eventName, userIdentity.invokedBy, eventTime, | sort @timestamp desc | limit 98 ###"}
{"prompt":"Show me the fields managementEvent, webIdFederationData, principalId, eventType, eventCategory, eventID, eventTime, type, eventName, type, mfaAuthenticated, vpcSet, accountId, arn, userName, userName, with a limit of 11 ->","completion":" fields @timestamp, managementEvent, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.principalId, eventType, eventCategory, eventID, eventTime, userIdentity.sessionContext.sessionIssuer.type, eventName, userIdentity.type, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, userIdentity.accountId, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.userName, userIdentity.sessionContext.sessionIssuer.userName, | sort @timestamp desc | limit 11 ###"}
{"prompt":"Show me the fields webIdFederationData, arn, arn, filterSet, type, awsRegion, accountId, webIdFederationData, recipientAccountId, principalId, recipientAccountId, invokedBy, type, responseElements, principalId, principalId, principalId, with a limit of 2 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userIdentity.arn, userIdentity.sessionContext.sessionIssuer.arn, requestParameters.filterSet, userIdentity.sessionContext.sessionIssuer.type, awsRegion, userIdentity.accountId, userIdentity.sessionContext.webIdFederationData, recipientAccountId, userIdentity.sessionContext.sessionIssuer.principalId, recipientAccountId, userIdentity.invokedBy, userIdentity.type, responseElements, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.sessionContext.sessionIssuer.principalId, | sort @timestamp desc | limit 2 ###"}
{"prompt":"Show me the fields userAgent, arn, userAgent, eventName, creationDate, eventSource, eventCategory, recipientAccountId, webIdFederationData, mfaAuthenticated, vpcSet, webIdFederationData, webIdFederationData, vpcSet, userAgent, recipientAccountId, with a limit of 71 ->","completion":" fields @timestamp, userAgent, userIdentity.sessionContext.sessionIssuer.arn, userAgent, eventName, userIdentity.sessionContext.attributes.creationDate, eventSource, eventCategory, recipientAccountId, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.mfaAuthenticated, requestParameters.vpcSet, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.webIdFederationData, requestParameters.vpcSet, userAgent, recipientAccountId, | sort @timestamp desc | limit 71 ###"}
{"prompt":"Show me the fields webIdFederationData, creationDate, type, accountId, arn, userName, recipientAccountId, awsRegion, accountId, type, userAgent, mfaAuthenticated, eventName, with a limit of 84 ->","completion":" fields @timestamp, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.attributes.creationDate, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.sessionIssuer.accountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.userName, recipientAccountId, awsRegion, userIdentity.accountId, userIdentity.type, userAgent, userIdentity.sessionContext.attributes.mfaAuthenticated, eventName, | sort @timestamp desc | limit 84 ###"}
{"prompt":"Show me the fields creationDate, eventCategory, type, awsRegion, arn, recipientAccountId, arn, arn, sourceIPAddress, accountId, with a limit of 68 ->","completion":" fields @timestamp, userIdentity.sessionContext.attributes.creationDate, eventCategory, userIdentity.type, awsRegion, userIdentity.arn, recipientAccountId, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, sourceIPAddress, userIdentity.accountId, | sort @timestamp desc | limit 68 ###"}
{"prompt":"Show me the fields invokedBy, eventTime, principalId, invokedBy, managementEvent, accountId, managementEvent, userAgent, eventSource, with a limit of 1 ->","completion":" fields @timestamp, userIdentity.invokedBy, eventTime, userIdentity.sessionContext.sessionIssuer.principalId, userIdentity.invokedBy, managementEvent, userIdentity.accountId, managementEvent, userAgent, eventSource, | sort @timestamp desc | limit 1 ###"}
{"prompt":"Show me the fields type, webIdFederationData, principalId, readOnly, principalId, type, readOnly, eventVersion, filterSet, creationDate, eventType, eventSource, eventTime, type, eventSource, arn, arn, eventCategory, sourceIPAddress, responseElements, eventTime, eventID, type, with a limit of 92 ->","completion":" fields @timestamp, userIdentity.sessionContext.sessionIssuer.type, userIdentity.sessionContext.webIdFederationData, userIdentity.sessionContext.sessionIssuer.principalId, readOnly, userIdentity.principalId, userIdentity.type, readOnly, eventVersion, requestParameters.filterSet, userIdentity.sessionContext.attributes.creationDate, eventType, eventSource, eventTime, userIdentity.sessionContext.sessionIssuer.type, eventSource, userIdentity.sessionContext.sessionIssuer.arn, userIdentity.sessionContext.sessionIssuer.arn, eventCategory, sourceIPAddress, responseElements, eventTime, eventID, userIdentity.sessionContext.sessionIssuer.type, | sort @timestamp desc | limit 92 ###"}

